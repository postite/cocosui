// Generated by Haxe 4.0.0-rc.3+e3df7a4
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var haxe_ds_List = function() {
	this.length = 0;
};
haxe_ds_List.__name__ = true;
haxe_ds_List.prototype = {
	push: function(item) {
		var x = new haxe_ds__$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,first: function() {
		if(this.h == null) {
			return null;
		} else {
			return this.h.item;
		}
	}
	,pop: function() {
		if(this.h == null) {
			return null;
		}
		var x = this.h.item;
		this.h = this.h.next;
		if(this.h == null) {
			this.q = null;
		}
		this.length--;
		return x;
	}
	,__class__: haxe_ds_List
};
var tink_state__$Observable_Observable_$Impl_$ = {};
tink_state__$Observable_Observable_$Impl_$.__name__ = true;
tink_state__$Observable_Observable_$Impl_$.get_value = function(this1) {
	return tink_state__$Observable_Observable_$Impl_$.measure(this1).a;
};
tink_state__$Observable_Observable_$Impl_$._new = function(get,changed) {
	return tink_state__$Observable_Observable_$Impl_$.create(function() {
		return new tink_core_MPair(get(),tink_core__$Signal_Signal_$Impl_$.nextTime(changed));
	});
};
tink_state__$Observable_Observable_$Impl_$.combine = function(this1,that,f) {
	return new tink_state__$Observable_SimpleObservable(function() {
		var p = tink_state__$Observable_Observable_$Impl_$.measure(this1);
		var q = tink_state__$Observable_Observable_$Impl_$.measure(that);
		return new tink_core_MPair(f(p.a,q.a),tink_core__$Future_Future_$Impl_$.first(p.b,q.b));
	});
};
tink_state__$Observable_Observable_$Impl_$.nextTime = function(this1,options,check) {
	return tink_state__$Observable_Observable_$Impl_$.getNext(this1,options,function(v) {
		if(check(v)) {
			return haxe_ds_Option.Some(v);
		} else {
			return haxe_ds_Option.None;
		}
	});
};
tink_state__$Observable_Observable_$Impl_$.getNext = function(this1,options,select) {
	var ret = new tink_core_FutureTrigger();
	var waiting = options != null && options.butNotNow;
	var _e = tink_state__$Observable_Observable_$Impl_$.bind(this1,{ direct : options != null && options.hires},function(value) {
		var out = select(value);
		if(waiting) {
			waiting = out != haxe_ds_Option.None;
		} else {
			switch(out._hx_index) {
			case 0:
				ret.trigger(out.v);
				break;
			case 1:
				break;
			}
		}
	});
	var tmp = function() {
		if(_e != null) {
			_e.cancel();
		}
	};
	ret.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(tmp));
	return ret;
};
tink_state__$Observable_Observable_$Impl_$.join = function(this1,that) {
	var lastA = null;
	return tink_state__$Observable_Observable_$Impl_$.combine(this1,that,function(a,b) {
		var ret = lastA == a ? b : a;
		lastA = a;
		return ret;
	});
};
tink_state__$Observable_Observable_$Impl_$.map = function(this1,f) {
	return tink_state__$Observable_Observable_$Impl_$.create(function() {
		var m = tink_state__$Observable_Observable_$Impl_$.measure(this1);
		return new tink_core_MPair(f(m.a),m.b);
	});
};
tink_state__$Observable_Observable_$Impl_$.combineAsync = function(this1,that,f) {
	return tink_state__$Observable_Observable_$Impl_$.mapAsync(tink_state__$Observable_Observable_$Impl_$.combine(this1,that,f),tink_state__$Observable_Transform_$Impl_$.plain(function(x) {
		return x;
	}));
};
tink_state__$Observable_Observable_$Impl_$.mapAsync = function(this1,f) {
	return tink_state__$Observable_Observable_$Impl_$.flatten(tink_state__$Observable_Observable_$Impl_$.map(tink_state__$Observable_Observable_$Impl_$.map(this1,f),tink_state__$Observable_Transform_$Impl_$.plain(tink_state__$Observable_Observable_$Impl_$.ofPromise)));
};
tink_state__$Observable_Observable_$Impl_$.measure = function(this1) {
	var before = tink_state__$Observable_Observable_$Impl_$.stack.first();
	tink_state__$Observable_Observable_$Impl_$.stack.push(this1);
	var p = this1.poll();
	var c = tink_state__$Observable_AutoObservable;
	var _g;
	if(!((before) instanceof c)) {
		var o = before;
		_g = o != null && c.__isInterface__ && js_Boot.__interfLoop(js_Boot.getClass(o),c);
	} else {
		_g = true;
	}
	var _g1 = _g ? before : null;
	if(_g1 != null) {
		_g1.subscribe(p.b);
	}
	tink_state__$Observable_Observable_$Impl_$.stack.pop();
	return p;
};
tink_state__$Observable_Observable_$Impl_$.switchSync = function(this1,cases,dfault) {
	return new tink_state__$Observable_SimpleObservable(function() {
		var p = tink_state__$Observable_Observable_$Impl_$.measure(this1);
		var _g = 0;
		while(_g < cases.length) {
			var c = cases[_g];
			++_g;
			if(c.when(p.a)) {
				dfault = c.then;
				break;
			}
		}
		var p2 = tink_state__$Observable_Observable_$Impl_$.measure(dfault.get());
		return new tink_core_MPair(p2.a,tink_core__$Future_Future_$Impl_$.first(p.b,p2.b));
	});
};
tink_state__$Observable_Observable_$Impl_$.bind = function(this1,options,cb) {
	var cb1;
	if(options == null) {
		cb1 = cb;
	} else {
		var _g = options.comparator;
		if(_g == null) {
			cb1 = cb;
		} else {
			var equal = _g;
			var isFirst = true;
			var last = null;
			cb1 = function(data) {
				if(isFirst) {
					isFirst = false;
					tink_core__$Callback_Callback_$Impl_$.invoke(cb,data);
				} else if(!equal(last,data)) {
					tink_core__$Callback_Callback_$Impl_$.invoke(cb,data);
				}
				last = data;
			};
		}
	}
	if(options == null) {
		var scheduled = false;
		var active = true;
		var updated = null;
		var link = null;
		var update = function() {
			if(active) {
				var next = tink_state__$Observable_Observable_$Impl_$.measure(this1);
				tink_core__$Callback_Callback_$Impl_$.invoke(cb1,next.a);
				scheduled = false;
				link = next.b.handle(updated);
			}
		};
		var doSchedule = function() {
			if(scheduled) {
				return;
			}
			scheduled = true;
			tink_state__$Observable_Observable_$Impl_$.schedule(update);
		};
		updated = tink_core__$Callback_Callback_$Impl_$.fromNiladic(doSchedule);
		doSchedule();
		return new tink_core__$Callback_SimpleLink(function() {
			if(active) {
				active = false;
				if(link != null) {
					link.cancel();
				}
			}
		});
	} else {
		var _g3 = options.direct;
		if(_g3 == null) {
			var scheduled1 = false;
			var active1 = true;
			var updated1 = null;
			var link1 = null;
			var update1 = function() {
				if(active1) {
					var next1 = tink_state__$Observable_Observable_$Impl_$.measure(this1);
					tink_core__$Callback_Callback_$Impl_$.invoke(cb1,next1.a);
					scheduled1 = false;
					link1 = next1.b.handle(updated1);
				}
			};
			var doSchedule1 = function() {
				if(scheduled1) {
					return;
				}
				scheduled1 = true;
				tink_state__$Observable_Observable_$Impl_$.schedule(update1);
			};
			updated1 = tink_core__$Callback_Callback_$Impl_$.fromNiladic(doSchedule1);
			doSchedule1();
			return new tink_core__$Callback_SimpleLink(function() {
				if(active1) {
					active1 = false;
					if(link1 != null) {
						link1.cancel();
					}
				}
			});
		} else if(_g3 == false) {
			var scheduled2 = false;
			var active2 = true;
			var updated2 = null;
			var link2 = null;
			var update2 = function() {
				if(active2) {
					var next2 = tink_state__$Observable_Observable_$Impl_$.measure(this1);
					tink_core__$Callback_Callback_$Impl_$.invoke(cb1,next2.a);
					scheduled2 = false;
					link2 = next2.b.handle(updated2);
				}
			};
			var doSchedule2 = function() {
				if(scheduled2) {
					return;
				}
				scheduled2 = true;
				tink_state__$Observable_Observable_$Impl_$.schedule(update2);
			};
			updated2 = tink_core__$Callback_Callback_$Impl_$.fromNiladic(doSchedule2);
			doSchedule2();
			return new tink_core__$Callback_SimpleLink(function() {
				if(active2) {
					active2 = false;
					if(link2 != null) {
						link2.cancel();
					}
				}
			});
		} else {
			var link3 = null;
			var update3 = null;
			update3 = function(_) {
				var next3 = tink_state__$Observable_Observable_$Impl_$.measure(this1);
				tink_core__$Callback_Callback_$Impl_$.invoke(cb1,next3.a);
				link3 = next3.b.handle(update3);
			};
			update3(tink_core_Noise.Noise);
			return new tink_core__$Callback_SimpleLink(function() {
				if(link3 != null) {
					link3.cancel();
				}
			});
		}
	}
};
tink_state__$Observable_Observable_$Impl_$.schedule = function(f) {
	var _g = tink_state__$Observable_Observable_$Impl_$.scheduled;
	if(_g == null) {
		f();
	} else {
		_g.push(f);
		tink_state__$Observable_Observable_$Impl_$.scheduleUpdate();
	}
};
tink_state__$Observable_Observable_$Impl_$.scheduleUpdate = function() {
	if(!tink_state__$Observable_Observable_$Impl_$.isScheduled) {
		tink_state__$Observable_Observable_$Impl_$.isScheduled = true;
		if(tink_state__$Observable_Observable_$Impl_$.hasRAF) {
			window.requestAnimationFrame(function(_) {
				tink_state__$Observable_Observable_$Impl_$.scheduledRun();
			});
		} else {
			tink_core__$Callback_Callback_$Impl_$.defer(tink_state__$Observable_Observable_$Impl_$.scheduledRun);
		}
	}
};
tink_state__$Observable_Observable_$Impl_$.scheduledRun = function() {
	tink_state__$Observable_Observable_$Impl_$.isScheduled = false;
	tink_state__$Observable_Observable_$Impl_$.updatePending();
};
tink_state__$Observable_Observable_$Impl_$.updatePending = function(maxSeconds) {
	if(maxSeconds == null) {
		maxSeconds = .01;
	}
	var end = Date.now() / 1000 + maxSeconds;
	while(true) {
		var old = tink_state__$Observable_Observable_$Impl_$.scheduled;
		tink_state__$Observable_Observable_$Impl_$.scheduled = [];
		var _g = 0;
		while(_g < old.length) old[_g++]();
		if(!(tink_state__$Observable_Observable_$Impl_$.scheduled.length > 0 && Date.now() / 1000 < end)) {
			break;
		}
	}
	if(tink_state__$Observable_Observable_$Impl_$.scheduled.length > 0) {
		tink_state__$Observable_Observable_$Impl_$.scheduleUpdate();
		return true;
	} else {
		return false;
	}
};
tink_state__$Observable_Observable_$Impl_$.updateAll = function() {
	tink_state__$Observable_Observable_$Impl_$.updatePending(Infinity);
};
tink_state__$Observable_Observable_$Impl_$.lift = function(o) {
	return o;
};
tink_state__$Observable_Observable_$Impl_$.deliver = function(o,initial) {
	return tink_state__$Observable_Observable_$Impl_$.map(o,tink_state__$Observable_Transform_$Impl_$.plain(function(p) {
		if(p._hx_index == 1) {
			initial = p.result;
			return initial;
		} else {
			return initial;
		}
	}));
};
tink_state__$Observable_Observable_$Impl_$.flatten = function(o) {
	return tink_state__$Observable_Observable_$Impl_$.create(function() {
		var m = tink_state__$Observable_Observable_$Impl_$.measure(o);
		var m2 = tink_state__$Observable_Observable_$Impl_$.measure(m.a);
		return new tink_core_MPair(m2.a,tink_core__$Future_Future_$Impl_$.or(m.b,m2.b));
	});
};
tink_state__$Observable_Observable_$Impl_$.ofPromise = function(p) {
	if(p == null) {
		throw new js__$Boot_HaxeError("Expected Promise but got null");
	}
	var value = tink_state_Promised.Loading;
	var _e = p;
	var f1 = function(f) {
		return _e.map(f).gather();
	};
	var becameInvalid = new tink_core__$Lazy_LazyFunc(function() {
		return f1(function(_) {
			return tink_core_Noise.Noise;
		});
	});
	return tink_state__$Observable_Observable_$Impl_$.create(function() {
		if(p != null) {
			p.handle(function(o) {
				switch(o._hx_index) {
				case 0:
					value = tink_state_Promised.Done(o.data);
					break;
				case 1:
					value = tink_state_Promised.Failed(o.failure);
					break;
				}
				becameInvalid = new tink_core__$Lazy_LazyConst(tink_state_ConstObservable.NEVER);
			});
		}
		var becameInvalid1 = becameInvalid.get();
		return new tink_core_MPair(value,becameInvalid1);
	});
};
tink_state__$Observable_Observable_$Impl_$.create = function(f) {
	return new tink_state__$Observable_SimpleObservable(f);
};
tink_state__$Observable_Observable_$Impl_$.auto = function(f) {
	return new tink_state__$Observable_AutoObservable(f);
};
tink_state__$Observable_Observable_$Impl_$.const = function(value) {
	return new tink_state_ConstObservable(value);
};
tink_state__$Observable_Observable_$Impl_$.untracked = function(f) {
	tink_state__$Observable_Observable_$Impl_$.stack.push(null);
	return tink_core_TypedError.tryFinally(f,($_=tink_state__$Observable_Observable_$Impl_$.stack,$bind($_,$_.pop)));
};
tink_state__$Observable_Observable_$Impl_$.eq = function(a,b) {
	if(a == null) {
		if(b == null) {
			return true;
		} else {
			return false;
		}
	} else if(b == null) {
		return false;
	} else {
		return tink_state__$Observable_Observable_$Impl_$.get_value(a) == tink_state__$Observable_Observable_$Impl_$.get_value(b);
	}
};
tink_state__$Observable_Observable_$Impl_$.neq = function(a,b) {
	return !tink_state__$Observable_Observable_$Impl_$.eq(a,b);
};
var tink_core__$Callback_Callback_$Impl_$ = {};
tink_core__$Callback_Callback_$Impl_$.__name__ = true;
tink_core__$Callback_Callback_$Impl_$._new = function(f) {
	return f;
};
tink_core__$Callback_Callback_$Impl_$.toFunction = function(this1) {
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.invoke = function(this1,data) {
	if(tink_core__$Callback_Callback_$Impl_$.depth < 500) {
		tink_core__$Callback_Callback_$Impl_$.depth++;
		this1(data);
		tink_core__$Callback_Callback_$Impl_$.depth--;
	} else {
		var _e = this1;
		var f = function(data1) {
			tink_core__$Callback_Callback_$Impl_$.invoke(_e,data1);
		};
		var data2 = data;
		tink_core__$Callback_Callback_$Impl_$.defer(function() {
			f(data2);
		});
	}
};
tink_core__$Callback_Callback_$Impl_$.ignore = function(cb) {
	return function(_) {
		tink_core__$Callback_Callback_$Impl_$.invoke(cb,tink_core_Noise.Noise);
	};
};
tink_core__$Callback_Callback_$Impl_$.fromNiladic = function(f) {
	return f;
};
tink_core__$Callback_Callback_$Impl_$.fromMany = function(callbacks) {
	return function(v) {
		var _g = 0;
		while(_g < callbacks.length) tink_core__$Callback_Callback_$Impl_$.invoke(callbacks[_g++],v);
	};
};
tink_core__$Callback_Callback_$Impl_$.defer = function(f) {
	haxe_Timer.delay(f,0);
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var coconut_diffing_Widget = function(rendered,mounted,updated,unmounting) {
	this._coco_pendingChildren = [];
	this._coco_alive = false;
	this._coco_invalid = false;
	var _gthis = this;
	this._coco_vStructure = tink_state__$Observable_Observable_$Impl_$.map(rendered,tink_state__$Observable_Transform_$Impl_$.plain(function(r) {
		if(r == null) {
			return _gthis._coco_differ.applicator.placeholder(_gthis);
		} else if(r._hx_index == 2) {
			var isEmpty = null;
			isEmpty = function(nodes) {
				var _g = 0;
				while(_g < nodes.length) {
					var n = nodes[_g];
					++_g;
					if(n != null) {
						if(n._hx_index == 2) {
							if(!isEmpty(n.nodes)) {
								return false;
							}
						} else {
							return false;
						}
					}
				}
				return true;
			};
			if(isEmpty(r.nodes)) {
				return _gthis._coco_differ.applicator.placeholder(_gthis);
			} else {
				return r;
			}
		} else {
			return r;
		}
	}));
	this._coco_viewMounted = mounted;
	this._coco_viewUpdated = updated;
	this._coco_viewUnmounting = unmounting;
};
coconut_diffing_Widget.__name__ = true;
coconut_diffing_Widget.prototype = {
	_coco_getRender: function(later) {
		if(this._coco_invalid) {
			this._coco_invalid = false;
			var nuSnapshot = this._coco_poll().a;
			if(nuSnapshot != this._coco_lastSnapshot) {
				this._coco_lastSnapshot = nuSnapshot;
				this._coco_lastRender = this._coco_differ.updateAll(this._coco_lastRender,[nuSnapshot],this,later);
				later(this._coco_viewUpdated);
				this._coco_arm();
			}
		}
		return this._coco_lastRender;
	}
	,_coco_poll: function() {
		var _e = this._coco_vStructure;
		return tink_state__$Observable_Observable_$Impl_$.untracked(function() {
			return tink_state__$Observable_Observable_$Impl_$.measure(_e);
		});
	}
	,_coco_scheduleChild: function(child) {
		this._coco_pendingChildren.push(child);
		this._coco_invalidate();
	}
	,_coco_invalidate: function() {
		if(!this._coco_invalid) {
			this._coco_invalid = true;
			if(this._coco_parent != null) {
				this._coco_parent._coco_scheduleChild(this);
			} else {
				var f = $bind(this,this._coco_update);
				var tmp = function() {
					f(null);
				};
				coconut_diffing_Widget.defer(tmp);
			}
		}
	}
	,_coco_updateChildren: function(later) {
		if(this._coco_pendingChildren.length > 0) {
			var _g = 0;
			var _g1 = this._coco_pendingChildren.splice(0,this._coco_pendingChildren.length);
			while(_g < _g1.length) _g1[_g++]._coco_update(later);
		}
	}
	,_coco_performUpdate: function(later) {
		var previous = this._coco_lastRender;
		var next = this._coco_getRender(later);
		this._coco_updateChildren(later);
		if(previous == next) {
			return;
		}
		var previousCount = 0;
		var first = null;
		previous.each(later,function(r) {
			if(first == null) {
				first = r;
			}
			previousCount += 1;
		});
		var tmp = this._coco_differ;
		var tmp1 = this._coco_differ.applicator.traverseSiblings(first);
		tmp.setChildren(later,previousCount,tmp1,next);
	}
	,_coco_update: function(later) {
		if(this._coco_invalid && this._coco_alive) {
			if(later == null) {
				this._coco_differ.run($bind(this,this._coco_performUpdate));
			} else {
				this._coco_performUpdate(later);
			}
		}
	}
	,_coco_arm: function() {
		var this1 = this._coco_link;
		if(this1 != null) {
			this1.cancel();
		}
		this._coco_link = this._coco_poll().b.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic($bind(this,this._coco_invalidate)));
	}
	,_coco_teardown: function() {
		this._coco_alive = false;
		this._coco_viewUnmounting();
		var _g = 0;
		var _g1 = this._coco_lastRender.childList;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			var _this = this._coco_differ;
			switch(c._hx_index) {
			case 0:
				var _g2 = _this.applicator.unsetLastRender(c.r);
				if(_g2 != null) {
					var _g21 = _g2.childList;
					var _g3 = 0;
					while(_g3 < _g21.length) _this.destroyRender(_g21[_g3++]);
				}
				break;
			case 1:
				c.w._coco_teardown();
				break;
			}
		}
	}
	,_coco_initialize: function(differ,parent,later) {
		this._coco_alive = true;
		this._coco_parent = parent;
		this._coco_differ = differ;
		this._coco_lastRender = differ.renderAll([this._coco_lastSnapshot = this._coco_poll().a],this,later);
		this._coco_arm();
		later(this._coco_viewMounted);
	}
	,__class__: coconut_diffing_Widget
};
var coconut_ui_View = function(render,shouldUpdate,track,beforeRerender,mounted,updated) {
	this.__au = [];
	this.__bc = [];
	this.__bu = [];
	this._coco_revision = new tink_state__$State_SimpleState(0,null,null);
	this.viewId = coconut_ui_View.idCounter++;
	var _gthis = this;
	var firstTime = true;
	var last = null;
	var hasBeforeRerender = beforeRerender != null;
	var hasUpdated = updated != null;
	var lastRev = tink_state__$State_State_$Impl_$.get_value(this._coco_revision);
	coconut_diffing_Widget.call(this,tink_state__$Observable_Observable_$Impl_$.auto({ f : function() {
		var curRev = tink_state__$State_State_$Impl_$.get_value(_gthis._coco_revision);
		if(track != null) {
			track();
		}
		if(firstTime) {
			firstTime = false;
		} else {
			if(curRev == lastRev && shouldUpdate != null && !shouldUpdate()) {
				return last;
			}
			var hasCallbacks = _gthis.__bc.length > 0;
			if(hasBeforeRerender || hasCallbacks) {
				tink_state__$Observable_Observable_$Impl_$.untracked(function() {
					if(hasBeforeRerender) {
						beforeRerender();
					}
					if(hasCallbacks) {
						var _g = 0;
						var _g1 = _gthis.__bc.splice(0,_gthis.__bc.length);
						while(_g < _g1.length) tink_core__$Callback_Callback_$Impl_$.invoke(_g1[_g++],false);
					}
				});
			}
		}
		lastRev = curRev;
		last = render();
		return last;
	}}),mounted,function() {
		var hasCallbacks1 = _gthis.__au.length > 0;
		if(hasUpdated || hasCallbacks1) {
			tink_state__$Observable_Observable_$Impl_$.untracked(function() {
				if(hasUpdated) {
					updated();
				}
				if(hasCallbacks1) {
					var _g2 = 0;
					var _g11 = _gthis.__au.splice(0,_gthis.__au.length);
					while(_g2 < _g11.length) tink_core__$Callback_Callback_$Impl_$.invoke(_g11[_g2++],tink_core_Noise.Noise);
				}
			});
		}
	},function() {
		last = null;
		firstTime = true;
		_gthis.__beforeUnmount();
	});
};
coconut_ui_View.__name__ = true;
coconut_ui_View.__super__ = coconut_diffing_Widget;
coconut_ui_View.prototype = $extend(coconut_diffing_Widget.prototype,{
	__beforeUnmount: function() {
		var _g = 0;
		var _g1 = this.__bu.splice(0,this.__bu.length);
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c != null) {
				c.cancel();
			}
		}
		var _g2 = 0;
		var _g3 = this.__bc.splice(0,this.__bu.length);
		while(_g2 < _g3.length) tink_core__$Callback_Callback_$Impl_$.invoke(_g3[_g2++],true);
	}
	,forceUpdate: function(callback) {
		this._coco_revision.set(tink_state__$State_State_$Impl_$.get_value(this._coco_revision) + 1);
		if(callback != null) {
			this.__au.push(tink_core__$Callback_Callback_$Impl_$.fromNiladic(callback));
		}
	}
	,__class__: coconut_ui_View
});
var tink_core__$Future_SimpleFuture = function(f) {
	this.f = f;
};
tink_core__$Future_SimpleFuture.__name__ = true;
tink_core__$Future_SimpleFuture.prototype = {
	handle: function(callback) {
		return this.f(callback);
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Future_SimpleFuture(function(cb) {
			return _gthis.f(function(v) {
				var tmp = f(v);
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,tmp);
			});
		});
	}
	,flatMap: function(f) {
		var f1 = f;
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.flatten(new tink_core__$Future_SimpleFuture(function(cb) {
			return _gthis.f(function(v) {
				var tmp = f1(v);
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,tmp);
			});
		}));
	}
	,gather: function() {
		if(this.gathered != null) {
			return this.gathered;
		} else {
			return this.gathered = tink_core_FutureTrigger.gatherFuture(this);
		}
	}
	,eager: function() {
		var ret = this.gathered != null ? this.gathered : this.gathered = tink_core_FutureTrigger.gatherFuture(this);
		ret.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		}));
		return ret;
	}
	,__class__: tink_core__$Future_SimpleFuture
};
var tink_state_ConstObservable = function(value) {
	this.m = new tink_core_MPair(value,tink_state_ConstObservable.NEVER);
};
tink_state_ConstObservable.__name__ = true;
tink_state_ConstObservable.prototype = {
	poll: function() {
		return this.m;
	}
	,isValid: function() {
		return true;
	}
	,__class__: tink_state_ConstObservable
};
var tink_core_MPair = function(a,b) {
	this.a = a;
	this.b = b;
};
tink_core_MPair.__name__ = true;
tink_core_MPair.prototype = {
	__class__: tink_core_MPair
};
var coconut_ui_tools_Slot = function(owner,compare) {
	this.owner = owner;
	this.compare = compare == null ? function(a,b) {
		return a == b;
	} : compare;
};
coconut_ui_tools_Slot.__name__ = true;
coconut_ui_tools_Slot.prototype = {
	get_value: function() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this);
	}
	,poll: function() {
		var _gthis = this;
		if(this.last == null) {
			if(this.data == null) {
				this.last = new tink_core_MPair(null,new tink_core_FutureTrigger());
			} else {
				var m = tink_state__$Observable_Observable_$Impl_$.measure(this.data);
				this.last = new tink_core_MPair(m.a,new tink_core_FutureTrigger());
				this.link = m.b.handle(($_=this.last.b,$bind($_,$_.trigger)));
			}
			this.last.b.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
				_gthis.last = null;
			}));
		}
		return new tink_core_MPair(this.last.a,this.last.b);
	}
	,isValid: function() {
		if(this.data != null) {
			return this.data.isValid();
		} else {
			return true;
		}
	}
	,observe: function() {
		return this;
	}
	,setData: function(data) {
		this.data = data;
		if(this.last != null) {
			var this1 = this.link;
			if(this1 != null) {
				this1.cancel();
			}
			if(data != null) {
				var _e = data;
				var m = tink_state__$Observable_Observable_$Impl_$.untracked(function() {
					return tink_state__$Observable_Observable_$Impl_$.measure(_e);
				});
				if(this.compare(m.a,this.last.a)) {
					this.link = m.b.handle(($_=this.last.b,$bind($_,$_.trigger)));
				} else {
					this.last.b.trigger(tink_core_Noise.Noise);
				}
			}
		}
	}
	,toString: function() {
		return "Slot(" + Std.string(this.owner) + ")";
	}
	,__class__: coconut_ui_tools_Slot
};
var tink_state__$State_SimpleState = function(value,isEqual,guard) {
	this.value = value;
	this.isEqual = isEqual;
	this.guard = guard;
	this.arm();
};
tink_state__$State_SimpleState.__name__ = true;
tink_state__$State_SimpleState.prototype = {
	isValid: function() {
		return true;
	}
	,poll: function() {
		return this.next;
	}
	,get_value: function() {
		return this.value;
	}
	,arm: function() {
		this.trigger = new tink_core_FutureTrigger();
		this.next = new tink_core_MPair(this.value,this.trigger);
	}
	,differs: function(a,b) {
		if(this.isEqual == null) {
			return a != b;
		} else {
			return !this.isEqual(a,b);
		}
	}
	,set: function(value) {
		if(this.guard != null) {
			value = this.guard(value,this.value);
		}
		var b = this.value;
		if(this.isEqual == null ? value != b : !this.isEqual(value,b)) {
			this.value = value;
			var last = this.trigger;
			this.arm();
			last.trigger(tink_core_Noise.Noise);
		}
	}
	,__class__: tink_state__$State_SimpleState
};
var tink_state__$State_State_$Impl_$ = {};
tink_state__$State_State_$Impl_$.__name__ = true;
tink_state__$State_State_$Impl_$.get_value = function(this1) {
	return tink_state__$Observable_Observable_$Impl_$.get_value(this1);
};
tink_state__$State_State_$Impl_$._new = function(value,isEqual,guard) {
	return new tink_state__$State_SimpleState(value,isEqual,guard);
};
tink_state__$State_State_$Impl_$.observe = function(this1) {
	return this1;
};
tink_state__$State_State_$Impl_$.transform = function(this1,rules) {
	return new tink_state__$State_CompoundState(tink_state__$Observable_Observable_$Impl_$.map(this1,tink_state__$Observable_Transform_$Impl_$.plain($bind(rules,rules.read))),function(value) {
		var tmp = rules.write(value);
		this1.set(tmp);
	});
};
tink_state__$State_State_$Impl_$.bind = function(this1,options,cb) {
	return tink_state__$Observable_Observable_$Impl_$.bind(this1,options,cb);
};
tink_state__$State_State_$Impl_$.toggle = function(s) {
	s.set(!s.poll().a);
};
tink_state__$State_State_$Impl_$.toCallback = function(this1) {
	return $bind(this1,this1.set);
};
var tink_state__$Observable_SimpleObservable = function(f) {
	this._poll = f;
};
tink_state__$Observable_SimpleObservable.__name__ = true;
tink_state__$Observable_SimpleObservable.prototype = {
	resetCache: function(_) {
		this.cache = null;
	}
	,isValid: function() {
		return this.cache != null;
	}
	,poll: function() {
		var count = 0;
		var last = null;
		while(this.cache == null) {
			var cache = this.cache = this._poll();
			if(last == cache) {
				throw new js__$Boot_HaxeError("Polling loops on the same value");
			}
			last = cache;
			cache.b.handle($bind(this,this.resetCache));
			if(count++ >= 100) {
				throw new js__$Boot_HaxeError("Polling not concluded after 100 iterations");
			}
		}
		return this.cache;
	}
	,__class__: tink_state__$Observable_SimpleObservable
};
var tink_state__$Observable_AutoObservable = function(comp) {
	this.subscriptions = new haxe_ds_ObjectMap();
	var _gthis = this;
	tink_state__$Observable_SimpleObservable.call(this,function() {
		_gthis.subscriptions = new haxe_ds_ObjectMap();
		_gthis.trigger = new tink_core_FutureTrigger();
		return new tink_core_MPair(comp.f(),_gthis.trigger);
	});
};
tink_state__$Observable_AutoObservable.__name__ = true;
tink_state__$Observable_AutoObservable.__super__ = tink_state__$Observable_SimpleObservable;
tink_state__$Observable_AutoObservable.prototype = $extend(tink_state__$Observable_SimpleObservable.prototype,{
	subscribe: function(change) {
		if(this.subscriptions.h.__keys__[change.__id__] == null) {
			this.subscriptions.set(change,change.handle(($_=this.trigger,$bind($_,$_.trigger))));
		}
	}
	,__class__: tink_state__$Observable_AutoObservable
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if(((o) instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	if(Object.prototype.hasOwnProperty.call(cc,"__interfaces__")) {
		var intf = cc.__interfaces__;
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = intf[_g++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = $global.$haxeUID++);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var tink_core_FutureTrigger = function() {
	this.list = [];
};
tink_core_FutureTrigger.__name__ = true;
tink_core_FutureTrigger.gatherFuture = function(f) {
	var op = null;
	return new tink_core__$Future_SimpleFuture(function(cb) {
		if(op == null) {
			op = new tink_core_FutureTrigger();
			f.handle($bind(op,op.trigger));
			f = null;
		}
		return op.handle(cb);
	});
};
tink_core_FutureTrigger.prototype = {
	handle: function(callback) {
		var _g = this.list;
		if(_g == null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(callback,this.result);
			return null;
		} else {
			return tink_core__$Callback_CallbackList_$Impl_$.add(_g,callback);
		}
	}
	,map: function(f) {
		if(this.list == null) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(this.result)));
		} else {
			var ret = new tink_core_FutureTrigger();
			tink_core__$Callback_CallbackList_$Impl_$.add(this.list,function(v) {
				var tmp = f(v);
				ret.trigger(tmp);
			});
			return ret;
		}
	}
	,flatMap: function(f) {
		if(this.list == null) {
			return f(this.result);
		} else {
			var ret = new tink_core_FutureTrigger();
			tink_core__$Callback_CallbackList_$Impl_$.add(this.list,function(v) {
				f(v).handle($bind(ret,ret.trigger));
			});
			return ret;
		}
	}
	,gather: function() {
		return this;
	}
	,eager: function() {
		return this;
	}
	,asFuture: function() {
		return this;
	}
	,trigger: function(result) {
		if(this.list == null) {
			return false;
		} else {
			var list = this.list;
			this.list = null;
			this.result = result;
			tink_core__$Callback_CallbackList_$Impl_$.invoke(list,result);
			tink_core__$Callback_CallbackList_$Impl_$.clear(list);
			return true;
		}
	}
	,__class__: tink_core_FutureTrigger
};
var tink_core_TypedError = function(code,message,pos) {
	if(code == null) {
		code = 500;
	}
	this.isTinkError = true;
	this.code = code;
	this.message = message;
	this.pos = pos;
	this.exceptionStack = [];
	this.callStack = [];
};
tink_core_TypedError.__name__ = true;
tink_core_TypedError.withData = function(code,message,data,pos) {
	return tink_core_TypedError.typed(code,message,data,pos);
};
tink_core_TypedError.typed = function(code,message,data,pos) {
	var ret = new tink_core_TypedError(code,message,pos);
	ret.data = data;
	return ret;
};
tink_core_TypedError.ofJsError = function(e,pos) {
	return tink_core_TypedError.withData(500,e.message,e,pos);
};
tink_core_TypedError.asError = function(v) {
	if(v != null && v.isTinkError) {
		return v;
	} else {
		return null;
	}
};
tink_core_TypedError.catchExceptions = function(f,report,pos) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		var _g = tink_core_TypedError.asError(e1);
		return tink_core_Outcome.Failure(_g == null ? report == null ? tink_core_TypedError.withData(null,"Unexpected Error",e1,pos) : report(e1) : _g);
	}
};
tink_core_TypedError.reporter = function(code,message,pos) {
	return function(e) {
		return tink_core_TypedError.withData(code,message,e,pos);
	};
};
tink_core_TypedError.rethrow = function(any) {
	throw js__$Boot_HaxeError.wrap(any);
};
tink_core_TypedError.tryFinally = function(f,cleanup) {
	try { return f(); } finally { cleanup(); }
	return null;
};
tink_core_TypedError.prototype = {
	printPos: function() {
		return this.pos.className + "." + this.pos.methodName + ":" + this.pos.lineNumber;
	}
	,toString: function() {
		var ret = "Error#" + this.code + ": " + this.message;
		if(this.pos != null) {
			ret += " @ " + this.printPos();
		}
		return ret;
	}
	,throwSelf: function() {
		throw js__$Boot_HaxeError.wrap(this);
	}
	,__class__: tink_core_TypedError
};
var tink_core_Noise = $hxEnums["tink.core.Noise"] = { __ename__ : true, __constructs__ : ["Noise"]
	,Noise: {_hx_index:0,__enum__:"tink.core.Noise",toString:$estr}
};
var tink_state__$Observable_Transform_$Impl_$ = {};
tink_state__$Observable_Transform_$Impl_$.__name__ = true;
tink_state__$Observable_Transform_$Impl_$._new = function(f) {
	return f;
};
tink_state__$Observable_Transform_$Impl_$.apply = function(this1,value) {
	return this1(value);
};
tink_state__$Observable_Transform_$Impl_$.naiveAsync = function(f) {
	return function(p) {
		switch(p._hx_index) {
		case 0:
			return new tink_core__$Future_SimpleFuture(function(_) {
				return null;
			});
		case 1:
			return f(p.result);
		case 2:
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(p.error)));
		}
	};
};
tink_state__$Observable_Transform_$Impl_$.naive = function(f) {
	return function(p) {
		switch(p._hx_index) {
		case 0:
			return tink_state_Promised.Loading;
		case 1:
			return tink_state_Promised.Done(f(p.result));
		case 2:
			return tink_state_Promised.Failed(p.error);
		}
	};
};
tink_state__$Observable_Transform_$Impl_$.plain = function(f) {
	return f;
};
var Booler = function(__coco_data_) {
	this.__tink_defaults2217 = { label : tink_state__$Observable_Observable_$Impl_$.const("booler")};
	this.__slots = { done : new coconut_ui_tools_Slot(this,null), label : new coconut_ui_tools_Slot(this,null)};
	this.__coco_value = new tink_state__$State_SimpleState(false,null,null);
	this.__initAttributes(__coco_data_);
	coconut_ui_View.call(this,$bind(this,this.render),null,null,null,null,null);
};
Booler.__name__ = true;
Booler.fromHxx = function(hxxMeta,attributes) {
	return coconut_diffing_VNodeData.VWidget(Booler.__type,hxxMeta.ref,hxxMeta.key,attributes);
};
Booler.__super__ = coconut_ui_View;
Booler.prototype = $extend(coconut_ui_View.prototype,{
	done: function(a0) {
		var _g = tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.done);
		if(_g == null) {
			throw new js__$Boot_HaxeError("mandatory attribute " + "done" + " of <" + "Booler" + "/> was set to null");
		} else {
			_g(a0);
		}
		return;
	}
	,render: function() {
		var _gthis = this;
		var __r = [];
		var hxxMeta = { };
		var __r1 = [];
		var this1 = { f : function() {
			return tink_state__$Observable_Observable_$Impl_$.get_value(_gthis.__slots.label);
		}};
		var __ret = { label : tink_state__$Observable_Observable_$Impl_$.auto(this1)};
		__r1.push(Label.fromHxx({ },__ret));
		var hxxMeta1 = { };
		var __ret1 = { name : "booler", type : "checkbox", oninput : function(e) {
			var param = e.target.checked;
			_gthis.__coco_value.set(param);
			_gthis.done(param);
		}};
		__r1.push(coconut_diffing_VNodeData.VNative(coconut_vdom_Html.INPUT,hxxMeta1.ref,hxxMeta1.key,__ret1,null));
		var this2 = { f : function() {
			return Std.string(tink_state__$State_State_$Impl_$.get_value(_gthis.__coco_value));
		}};
		var __ret2 = { value : tink_state__$Observable_Observable_$Impl_$.auto(this2)};
		__r1.push(ValueBox.fromHxx({ },__ret2));
		var __ret3 = { };
		__r.push(coconut_diffing_VNodeData.VNative(coconut_vdom_Html.DIV,hxxMeta.ref,hxxMeta.key,__ret3,__r1));
		return __r[0];
	}
	,get_label: function() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.label);
	}
	,get_value: function() {
		return tink_state__$State_State_$Impl_$.get_value(this.__coco_value);
	}
	,set_value: function(param) {
		this.__coco_value.set(param);
		return param;
	}
	,__initAttributes: function(attributes) {
		this.__slots.done.setData(attributes.done);
		var this1 = attributes.label;
		this.__slots.label.setData(this1 == null ? this.__tink_defaults2217.label : this1);
	}
	,__class__: Booler
});
var ComboVal = $hxEnums["ComboVal"] = { __ename__ : true, __constructs__ : ["ONE","TWO"]
	,ONE: {_hx_index:0,__enum__:"ComboVal",toString:$estr}
	,TWO: {_hx_index:1,__enum__:"ComboVal",toString:$estr}
};
var tink_pure__$List_List_$Impl_$ = {};
tink_pure__$List_List_$Impl_$.__name__ = true;
tink_pure__$List_List_$Impl_$.get_length = function(this1) {
	if(this1 == null) {
		return 0;
	} else {
		return this1.length;
	}
};
tink_pure__$List_List_$Impl_$.first = function(this1,predicate) {
	var _g = new tink_pure_NodeIterator(this1);
	while(_g.list.length > 0) {
		var x = _g.next();
		if(predicate == null || predicate(x)) {
			return haxe_ds_Option.Some(x);
		}
	}
	return haxe_ds_Option.None;
};
tink_pure__$List_List_$Impl_$.last = function(this1,predicate) {
	if(this1 == null) {
		return haxe_ds_Option.None;
	} else if(predicate == null) {
		var _last = null;
		_last = function(v) {
			var _g = v.tails;
			if(_g.length == 0) {
				return haxe_ds_Option.Some(v.value);
			} else {
				return _last(_g[_g.length - 1]);
			}
		};
		return _last(this1);
	} else {
		var found = false;
		var ret = null;
		var _g1 = new tink_pure_NodeIterator(this1);
		while(_g1.list.length > 0) {
			var x = _g1.next();
			if(predicate(x)) {
				found = true;
				ret = x;
			}
		}
		if(found) {
			return haxe_ds_Option.Some(ret);
		} else {
			return haxe_ds_Option.None;
		}
	}
};
tink_pure__$List_List_$Impl_$.get = function(this1,index) {
	if(index < 0) {
		return haxe_ds_Option.None;
	}
	var iter = new tink_pure_NodeIterator(this1);
	var v = null;
	while(index-- >= 0) {
		if(iter.list.length <= 0) {
			return haxe_ds_Option.None;
		}
		v = iter.next();
	}
	return haxe_ds_Option.Some(v);
};
tink_pure__$List_List_$Impl_$._new = function() {
	return null;
};
tink_pure__$List_List_$Impl_$.node = function(this1) {
	return this1;
};
tink_pure__$List_List_$Impl_$.concat = function(this1,that) {
	if(this1 == null) {
		return that;
	} else if(that == null) {
		return this1;
	} else {
		return new tink_pure__$List_Node(this1.length + (that == null ? 0 : that.length),this1.value,this1.tails.concat([that]));
	}
};
tink_pure__$List_List_$Impl_$.sort = function(this1,compare) {
	var arr = tink_pure__$List_List_$Impl_$.toArray(this1);
	arr.sort(compare);
	return tink_pure__$List_List_$Impl_$.fromArray(arr);
};
tink_pure__$List_List_$Impl_$.append = function(this1,value) {
	if(this1 == null) {
		return new tink_pure__$List_Node(1,value);
	} else {
		return new tink_pure__$List_Node(this1.length + 1,this1.value,this1.tails.concat([new tink_pure__$List_Node(1,value)]));
	}
};
tink_pure__$List_List_$Impl_$.prepend = function(this1,value) {
	if(this1 == null) {
		return new tink_pure__$List_Node(1,value);
	} else {
		return new tink_pure__$List_Node(this1.length + 1,value,[this1]);
	}
};
tink_pure__$List_List_$Impl_$.replace = function(this1,select,generate) {
	var _g = [];
	var _g1 = new tink_pure_NodeIterator(this1);
	while(_g1.list.length > 0) {
		var v = _g1.next();
		_g.push(select(v) ? generate(v) : v);
	}
	return tink_pure__$List_List_$Impl_$.fromArray(_g);
};
tink_pure__$List_List_$Impl_$.exists = function(this1,predicate) {
	var ret = false;
	var _g = new tink_pure_NodeIterator(this1);
	while(_g.list.length > 0) if(predicate(_g.next())) {
		ret = true;
		break;
	}
	return ret;
};
tink_pure__$List_List_$Impl_$.count = function(this1,predicate) {
	var ret = 0;
	var _g = new tink_pure_NodeIterator(this1);
	while(_g.list.length > 0) if(predicate(_g.next())) {
		++ret;
	}
	return ret;
};
tink_pure__$List_List_$Impl_$.iterator = function(this1) {
	return new tink_pure_NodeIterator(this1);
};
tink_pure__$List_List_$Impl_$.toIterable = function(this1) {
	var _e = this1;
	return { iterator : function() {
		return new tink_pure_NodeIterator(_e);
	}};
};
tink_pure__$List_List_$Impl_$.filter = function(this1,f) {
	if(this1 == null) {
		return null;
	} else {
		return this1.filter(f);
	}
};
tink_pure__$List_List_$Impl_$.map = function(this1,f) {
	var _g = [];
	var _g1 = new tink_pure_NodeIterator(this1);
	while(_g1.list.length > 0) _g.push(f(_g1.next()));
	return tink_pure__$List_List_$Impl_$.fromArray(_g);
};
tink_pure__$List_List_$Impl_$.select = function(this1,f) {
	var arr = [];
	var _g = new tink_pure_NodeIterator(this1);
	while(_g.list.length > 0) {
		var _g1 = f(_g.next());
		switch(_g1._hx_index) {
		case 0:
			arr.push(_g1.v);
			break;
		case 1:
			break;
		}
	}
	return tink_pure__$List_List_$Impl_$.fromArray(arr);
};
tink_pure__$List_List_$Impl_$.single = function(v) {
	return new tink_pure__$List_Node(1,v);
};
tink_pure__$List_List_$Impl_$.toArray = function(this1) {
	var _g = [];
	var _g1 = new tink_pure_NodeIterator(this1);
	while(_g1.list.length > 0) _g.push(_g1.next());
	return _g;
};
tink_pure__$List_List_$Impl_$.fromArray = function(i) {
	var ret = null;
	var len = 0;
	var pos = i.length;
	while(pos-- > 0) ret = new tink_pure__$List_Node(++len,i[pos],ret == null ? tink_pure__$List_Node.EMPTY : [ret]);
	return ret;
};
var tink_pure__$List_Node = function(length,value,tails) {
	this.value = value;
	this.length = length;
	this.tails = tails == null ? tink_pure__$List_Node.EMPTY : tails;
};
tink_pure__$List_Node.__name__ = true;
tink_pure__$List_Node.prototype = {
	filter: function(f) {
		var iter = new tink_pure_NodeIterator(this);
		var ret = [];
		while(iter.list.length > 0) {
			var value = iter.next();
			var res = f(value);
			if(res > 0) {
				ret.push(value);
			}
			if((res & 3) == 3) {
				break;
			}
		}
		return tink_pure__$List_List_$Impl_$.fromArray(ret);
	}
	,__class__: tink_pure__$List_Node
};
var Combo = function(__coco_data_) {
	this.__tink_defaults2226 = { data : tink_state__$Observable_Observable_$Impl_$.auto({ f : function() {
		return tink_pure__$List_List_$Impl_$.fromArray([]);
	}}), label : tink_state__$Observable_Observable_$Impl_$.const("combo")};
	this.__slots = { data : new coconut_ui_tools_Slot(this,null), done : new coconut_ui_tools_Slot(this,null), label : new coconut_ui_tools_Slot(this,null)};
	this.__coco_value = new tink_state__$State_SimpleState("z",null,null);
	this.__initAttributes(__coco_data_);
	coconut_ui_View.call(this,$bind(this,this.render),null,null,null,null,null);
};
Combo.__name__ = true;
Combo.fromHxx = function(hxxMeta,attributes) {
	return coconut_diffing_VNodeData.VWidget(Combo.__type,hxxMeta.ref,hxxMeta.key,attributes);
};
Combo.__super__ = coconut_ui_View;
Combo.prototype = $extend(coconut_ui_View.prototype,{
	done: function(a0) {
		var _g = tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.done);
		if(_g == null) {
			throw new js__$Boot_HaxeError("mandatory attribute " + "done" + " of <" + "Combo" + "/> was set to null");
		} else {
			_g(a0);
		}
		return;
	}
	,render: function() {
		var _gthis = this;
		var __r = [];
		var hxxMeta = { };
		var __r1 = [];
		var this1 = { f : function() {
			return tink_state__$Observable_Observable_$Impl_$.get_value(_gthis.__slots.label);
		}};
		var __ret = { label : tink_state__$Observable_Observable_$Impl_$.auto(this1)};
		__r1.push(Label.fromHxx({ },__ret));
		var hxxMeta1 = { };
		var __r2 = [];
		var _g = new tink_pure_NodeIterator(tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.data));
		while(_g.list.length > 0) {
			var a = _g.next();
			var __r3 = [];
			var hxxMeta2 = { };
			var __r4 = [];
			var s = Std.string(a);
			__r4.push(coconut_diffing_VNodeData.VNative(coconut_vdom__$Html_Text.inst,null,null,s,null));
			var __ret1 = { };
			__r3.push(coconut_diffing_VNodeData.VNative(coconut_vdom_Html.OPTION,hxxMeta2.ref,hxxMeta2.key,__ret1,__r4));
			__r2.push(__r3[0]);
		}
		var __ret2 = { onchange : function(e) {
			var param = e.target.value;
			_gthis.__coco_value.set(param);
			_gthis.done(param);
		}};
		__r1.push(coconut_diffing_VNodeData.VNative(coconut_vdom_Html.SELECT,hxxMeta1.ref,hxxMeta1.key,__ret2,__r2));
		var this2 = { f : function() {
			return Std.string(tink_state__$State_State_$Impl_$.get_value(_gthis.__coco_value));
		}};
		var __ret3 = { value : tink_state__$Observable_Observable_$Impl_$.auto(this2)};
		__r1.push(ValueBox.fromHxx({ },__ret3));
		var __ret4 = { };
		__r.push(coconut_diffing_VNodeData.VNative(coconut_vdom_Html.DIV,hxxMeta.ref,hxxMeta.key,__ret4,__r1));
		return __r[0];
	}
	,get_data: function() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.data);
	}
	,get_label: function() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.label);
	}
	,get_value: function() {
		return tink_state__$State_State_$Impl_$.get_value(this.__coco_value);
	}
	,set_value: function(param) {
		this.__coco_value.set(param);
		return param;
	}
	,__initAttributes: function(attributes) {
		var this1 = attributes.data;
		this.__slots.data.setData(this1 == null ? this.__tink_defaults2226.data : this1);
		this.__slots.done.setData(attributes.done);
		var this11 = attributes.label;
		this.__slots.label.setData(this11 == null ? this.__tink_defaults2226.label : this11);
	}
	,__class__: Combo
});
var FloatRange = function(__coco_data_) {
	this.__tink_defaults2194 = { step : tink_state__$Observable_Observable_$Impl_$.const(.1), label : tink_state__$Observable_Observable_$Impl_$.const("floatrange")};
	this.__slots = { step : new coconut_ui_tools_Slot(this,null), done : new coconut_ui_tools_Slot(this,null), label : new coconut_ui_tools_Slot(this,null)};
	this.__coco_value = new tink_state__$State_SimpleState(0.,null,null);
	this.__initAttributes(__coco_data_);
	coconut_ui_View.call(this,$bind(this,this.render),null,null,null,null,null);
};
FloatRange.__name__ = true;
FloatRange.fromHxx = function(hxxMeta,attributes) {
	return coconut_diffing_VNodeData.VWidget(FloatRange.__type,hxxMeta.ref,hxxMeta.key,attributes);
};
FloatRange.__super__ = coconut_ui_View;
FloatRange.prototype = $extend(coconut_ui_View.prototype,{
	done: function(a0) {
		var _g = tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.done);
		if(_g == null) {
			throw new js__$Boot_HaxeError("mandatory attribute " + "done" + " of <" + "FloatRange" + "/> was set to null");
		} else {
			_g(a0);
		}
		return;
	}
	,render: function() {
		var _gthis = this;
		var __r = [];
		var hxxMeta = { };
		var __r1 = [];
		var this1 = { f : function() {
			return tink_state__$Observable_Observable_$Impl_$.get_value(_gthis.__slots.label);
		}};
		var __ret = { label : tink_state__$Observable_Observable_$Impl_$.auto(this1)};
		__r1.push(Label.fromHxx({ },__ret));
		var hxxMeta1 = { };
		var __ret1 = { name : "floatrange", type : "range", oninput : function(e) {
			var param = e.target.value;
			_gthis.__coco_value.set(param);
			_gthis.done(param);
		}, min : "0", max : "1", step : ".1"};
		__r1.push(coconut_diffing_VNodeData.VNative(coconut_vdom_Html.INPUT,hxxMeta1.ref,hxxMeta1.key,__ret1,null));
		var this2 = { f : function() {
			return Std.string(tink_state__$State_State_$Impl_$.get_value(_gthis.__coco_value));
		}};
		var __ret2 = { value : tink_state__$Observable_Observable_$Impl_$.auto(this2)};
		__r1.push(ValueBox.fromHxx({ },__ret2));
		var __ret3 = { };
		__r.push(coconut_diffing_VNodeData.VNative(coconut_vdom_Html.DIV,hxxMeta.ref,hxxMeta.key,__ret3,__r1));
		return __r[0];
	}
	,get_step: function() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.step);
	}
	,get_label: function() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.label);
	}
	,get_value: function() {
		return tink_state__$State_State_$Impl_$.get_value(this.__coco_value);
	}
	,set_value: function(param) {
		this.__coco_value.set(param);
		return param;
	}
	,__initAttributes: function(attributes) {
		var this1 = attributes.step;
		this.__slots.step.setData(this1 == null ? this.__tink_defaults2194.step : this1);
		this.__slots.done.setData(attributes.done);
		var this11 = attributes.label;
		this.__slots.label.setData(this11 == null ? this.__tink_defaults2194.label : this11);
	}
	,__class__: FloatRange
});
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IntRange = function(__coco_data_) {
	this.__tink_defaults2208 = { step : tink_state__$Observable_Observable_$Impl_$.const(1), max : tink_state__$Observable_Observable_$Impl_$.const(100), min : tink_state__$Observable_Observable_$Impl_$.const(0), label : tink_state__$Observable_Observable_$Impl_$.const("intRange")};
	this.__slots = { step : new coconut_ui_tools_Slot(this,null), max : new coconut_ui_tools_Slot(this,null), min : new coconut_ui_tools_Slot(this,null), done : new coconut_ui_tools_Slot(this,null), label : new coconut_ui_tools_Slot(this,null)};
	this.__coco_value = new tink_state__$State_SimpleState(0,null,null);
	this.__initAttributes(__coco_data_);
	coconut_ui_View.call(this,$bind(this,this.render),null,null,null,null,null);
};
IntRange.__name__ = true;
IntRange.fromHxx = function(hxxMeta,attributes) {
	return coconut_diffing_VNodeData.VWidget(IntRange.__type,hxxMeta.ref,hxxMeta.key,attributes);
};
IntRange.__super__ = coconut_ui_View;
IntRange.prototype = $extend(coconut_ui_View.prototype,{
	done: function(a0) {
		var _g = tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.done);
		if(_g == null) {
			throw new js__$Boot_HaxeError("mandatory attribute " + "done" + " of <" + "IntRange" + "/> was set to null");
		} else {
			_g(a0);
		}
		return;
	}
	,render: function() {
		var _gthis = this;
		var __r = [];
		var hxxMeta = { };
		var __r1 = [];
		var this1 = { f : function() {
			return tink_state__$Observable_Observable_$Impl_$.get_value(_gthis.__slots.label);
		}};
		var __ret = { label : tink_state__$Observable_Observable_$Impl_$.auto(this1)};
		__r1.push(Label.fromHxx({ },__ret));
		var hxxMeta1 = { };
		var __ret1 = { name : "intRange", type : "range", oninput : function(e) {
			var param = e.target.value;
			_gthis.__coco_value.set(param);
			_gthis.done(param);
		}, min : "{min}", max : "{max}", step : "{step}"};
		__r1.push(coconut_diffing_VNodeData.VNative(coconut_vdom_Html.INPUT,hxxMeta1.ref,hxxMeta1.key,__ret1,null));
		var this2 = { f : function() {
			return Std.string(tink_state__$State_State_$Impl_$.get_value(_gthis.__coco_value));
		}};
		var __ret2 = { value : tink_state__$Observable_Observable_$Impl_$.auto(this2)};
		__r1.push(ValueBox.fromHxx({ },__ret2));
		var __ret3 = { };
		__r.push(coconut_diffing_VNodeData.VNative(coconut_vdom_Html.DIV,hxxMeta.ref,hxxMeta.key,__ret3,__r1));
		return __r[0];
	}
	,get_step: function() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.step);
	}
	,get_max: function() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.max);
	}
	,get_min: function() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.min);
	}
	,get_label: function() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.label);
	}
	,get_value: function() {
		return tink_state__$State_State_$Impl_$.get_value(this.__coco_value);
	}
	,set_value: function(param) {
		this.__coco_value.set(param);
		return param;
	}
	,__initAttributes: function(attributes) {
		var this1 = attributes.step;
		this.__slots.step.setData(this1 == null ? this.__tink_defaults2208.step : this1);
		var this11 = attributes.max;
		this.__slots.max.setData(this11 == null ? this.__tink_defaults2208.max : this11);
		var this12 = attributes.min;
		this.__slots.min.setData(this12 == null ? this.__tink_defaults2208.min : this12);
		this.__slots.done.setData(attributes.done);
		var this13 = attributes.label;
		this.__slots.label.setData(this13 == null ? this.__tink_defaults2208.label : this13);
	}
	,__class__: IntRange
});
var Label = function(__coco_data_) {
	this.__tink_defaults2198 = { label : tink_state__$Observable_Observable_$Impl_$.const("")};
	this.__slots = { label : new coconut_ui_tools_Slot(this,null)};
	this.__initAttributes(__coco_data_);
	coconut_ui_View.call(this,$bind(this,this.render),null,null,null,null,null);
};
Label.__name__ = true;
Label.fromHxx = function(hxxMeta,attributes) {
	return coconut_diffing_VNodeData.VWidget(Label.__type,hxxMeta.ref,hxxMeta.key,attributes);
};
Label.__super__ = coconut_ui_View;
Label.prototype = $extend(coconut_ui_View.prototype,{
	render: function() {
		var __r = [];
		var hxxMeta = { };
		var __r1 = [];
		var hxxMeta1 = { };
		var __r2 = [];
		var s = tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.label);
		__r2.push(coconut_diffing_VNodeData.VNative(coconut_vdom__$Html_Text.inst,null,null,s,null));
		__r2.push(coconut_diffing_VNodeData.VNative(coconut_vdom__$Html_Text.inst,null,null," ",null));
		__r1.push(coconut_diffing_VNodeData.VNative(coconut_vdom_Html.LABEL,hxxMeta1.ref,hxxMeta1.key,{ htmlFor : "floatrange"},__r2));
		__r.push(coconut_diffing_VNodeData.VNative(coconut_vdom_Html.DIV,hxxMeta.ref,hxxMeta.key,{ },__r1));
		return __r[0];
	}
	,get_label: function() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.label);
	}
	,__initAttributes: function(attributes) {
		var this1 = attributes.label;
		this.__slots.label.setData(this1 == null ? this.__tink_defaults2198.label : this1);
	}
	,__class__: Label
});
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	console.log("src/Main.hx:5:","Hello, world!");
	window.document.addEventListener("DOMContentLoaded",Main.init);
};
Main.init = function(e) {
	var wrap = window.document.querySelector("#sui");
	var __r = [];
	__r.push(Sui.fromHxx({ },{ }));
	coconut_ui_Renderer.mount(wrap,__r[0]);
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.copy = function(o) {
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x, x && x[0]=="0" && (x[1]=="x" || x[1]=="X") ? 16 : 10);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var Sui = function(__coco_data_) {
	this.__tink_defaults2190 = { };
	this.__slots = { };
	coconut_ui_View.call(this,$bind(this,this.render),null,null,null,null,null);
};
Sui.__name__ = true;
Sui.fromHxx = function(hxxMeta,attributes) {
	return coconut_diffing_VNodeData.VWidget(Sui.__type,hxxMeta.ref,hxxMeta.key,attributes);
};
Sui.__super__ = coconut_ui_View;
Sui.prototype = $extend(coconut_ui_View.prototype,{
	render: function() {
		var _gthis = this;
		var __r = [];
		var hxxMeta = { };
		var __ret = { className : tink_domspec__$ClassName_ClassName_$Impl_$.ofString("pipo")};
		var __r1 = [];
		var __ret1 = { done : tink_state__$Observable_Observable_$Impl_$.auto({ f : function() {
			return $bind(_gthis,_gthis.gette);
		}})};
		__r1.push(FloatRange.fromHxx({ },__ret1));
		var __ret2 = { done : tink_state__$Observable_Observable_$Impl_$.auto({ f : function() {
			return $bind(_gthis,_gthis.gette);
		}})};
		__r1.push(IntRange.fromHxx({ },__ret2));
		var __ret3 = { done : tink_state__$Observable_Observable_$Impl_$.auto({ f : function() {
			return $bind(_gthis,_gthis.gette);
		}})};
		__r1.push(Booler.fromHxx({ },__ret3));
		var __ret4 = { data : tink_state__$Observable_Observable_$Impl_$.auto({ f : function() {
			return tink_pure__$List_List_$Impl_$.fromArray([ComboVal.ONE,ComboVal.TWO,ComboVal.ONE]);
		}}), done : tink_state__$Observable_Observable_$Impl_$.auto({ f : function() {
			return $bind(_gthis,_gthis.gette);
		}})};
		__r1.push(Combo.fromHxx({ },__ret4));
		__r.push(coconut_diffing_VNodeData.VNative(coconut_vdom_Html.DIV,hxxMeta.ref,hxxMeta.key,__ret,__r1));
		return __r[0];
	}
	,gette: function(r) {
		console.log("src/Sui.hx:15:","r=" + Std.string(r));
	}
	,__initAttributes: function(attributes) {
	}
	,__class__: Sui
});
var ValueBox = function(__coco_data_) {
	this.__tink_defaults2033 = { value : tink_state__$Observable_Observable_$Impl_$.const("")};
	this.__slots = { value : new coconut_ui_tools_Slot(this,null)};
	this.__initAttributes(__coco_data_);
	coconut_ui_View.call(this,$bind(this,this.render),null,null,null,null,null);
};
ValueBox.__name__ = true;
ValueBox.fromHxx = function(hxxMeta,attributes) {
	return coconut_diffing_VNodeData.VWidget(ValueBox.__type,hxxMeta.ref,hxxMeta.key,attributes);
};
ValueBox.__super__ = coconut_ui_View;
ValueBox.prototype = $extend(coconut_ui_View.prototype,{
	render: function() {
		var __r = [];
		var hxxMeta = { };
		var __r1 = [];
		var s = tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.value);
		__r1.push(coconut_diffing_VNodeData.VNative(coconut_vdom__$Html_Text.inst,null,null,s,null));
		__r.push(coconut_diffing_VNodeData.VNative(coconut_vdom_Html.SPAN,hxxMeta.ref,hxxMeta.key,{ },__r1));
		return __r[0];
	}
	,get_value: function() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.value);
	}
	,__initAttributes: function(attributes) {
		var this1 = attributes.value;
		this.__slots.value.setData(this1 == null ? this.__tink_defaults2033.value : this1);
	}
	,__class__: ValueBox
});
var coconut_Ui = function() { };
coconut_Ui.__name__ = true;
var coconut_data__$Value_Value_$Impl_$ = {};
coconut_data__$Value_Value_$Impl_$.__name__ = true;
coconut_data__$Value_Value_$Impl_$.getValue = function(this1) {
	return tink_state__$Observable_Observable_$Impl_$.get_value(this1);
};
coconut_data__$Value_Value_$Impl_$.or = function(this1,fallback) {
	if(this1 == null) {
		return fallback;
	} else {
		return this1;
	}
};
var coconut_diffing_Differ = function(applicator) {
	this.applicator = applicator;
};
coconut_diffing_Differ.__name__ = true;
coconut_diffing_Differ.prototype = {
	_renderAll: function(nodes,later,parent,$with) {
		var byType = new haxe_ds_ObjectMap();
		var childList = [];
		var process = null;
		process = function(nodes1) {
			if(nodes1 != null) {
				var _g = 0;
				while(_g < nodes1.length) {
					var n = nodes1[_g];
					++_g;
					if(n != null) {
						switch(n._hx_index) {
						case 0:
							childList.push(coconut_diffing_RNode.RNative(null,n.n,null));
							break;
						case 1:
							var w = n.w;
							$with.widgetInst(w);
							var key = coconut_diffing__$Key_Key_$Impl_$.ofObject(w);
							var type = coconut_diffing_Differ.WIDGET_INST;
							var n1 = coconut_diffing_RNode.RWidget(w,null);
							var registry;
							var _g1 = byType.h[type.__id__];
							if(_g1 == null) {
								var v = new coconut_diffing_TypeRegistry();
								byType.set(type,v);
								registry = v;
							} else {
								registry = _g1;
							}
							if(key == null) {
								registry.put(n1);
							} else {
								registry.set(key,n1);
							}
							childList.push(n1);
							break;
						case 2:
							process(n.nodes);
							break;
						case 3:
							var _g4 = n.key;
							var _g3 = n.ref;
							var attr = n.a;
							var type1 = n.type;
							var real = $with.native(type1,_g4,attr,n.children);
							var ref = [_g3];
							var n2 = coconut_diffing_RNode.RNative(attr,real,_g3);
							var registry1;
							var _g2 = byType.h[type1.__id__];
							if(_g2 == null) {
								var v1 = new coconut_diffing_TypeRegistry();
								byType.set(type1,v1);
								registry1 = v1;
							} else {
								registry1 = _g2;
							}
							if(ref[0] != null) {
								var process1 = (function(ref1,r) {
									return function() {
										ref1[0](r[0]);
									};
								})(ref,[real]);
								later(process1);
							}
							if(_g4 == null) {
								registry1.put(n2);
							} else {
								registry1.set(_g4,n2);
							}
							childList.push(n2);
							break;
						case 4:
							var _g10 = n.key;
							var _g9 = n.ref;
							var type2 = n.type;
							var w1 = $with.widget(type2,_g10,n.a);
							var ref2 = [_g9];
							var n3 = coconut_diffing_RNode.RWidget(w1,_g9);
							var registry2;
							var _g5 = byType.h[type2.__id__];
							if(_g5 == null) {
								var v2 = new coconut_diffing_TypeRegistry();
								byType.set(type2,v2);
								registry2 = v2;
							} else {
								registry2 = _g5;
							}
							if(ref2[0] != null) {
								var process2 = (function(ref3,r1) {
									return function() {
										ref3[0](r1[0]);
									};
								})(ref2,[w1]);
								later(process2);
							}
							if(_g10 == null) {
								registry2.put(n3);
							} else {
								registry2.set(_g10,n3);
							}
							childList.push(n3);
							break;
						}
					}
				}
			}
		};
		process(nodes);
		return new coconut_diffing_Rendered(byType,childList);
	}
	,renderAll: function(nodes,parent,later) {
		var _gthis = this;
		return this._renderAll(nodes,later,parent,{ native : function(type,_,attr,children) {
			return _gthis.createNative(type,attr,children,parent,later);
		}, widget : function(t,_1,a) {
			return _gthis.createWidget(t,a,parent,later);
		}, widgetInst : function(w) {
			_gthis.mountInstance(w,parent,later);
		}});
	}
	,mountInstance: function(w,parent,later) {
		if(w._coco_alive) {
			tink_core_TypedError.withData(null,"Same widget instance mounted twice",w,{ fileName : "coconut/diffing/Differ.hx", lineNumber : 93, className : "coconut.diffing.Differ", methodName : "mountInstance"});
		}
		w._coco_initialize(this,parent,later);
	}
	,createWidget: function(t,a,parent,later) {
		var ret = t.create(a);
		ret._coco_initialize(this,parent,later);
		return ret;
	}
	,updateAll: function(before,nodes,parent,later) {
		var _gthis = this;
		var _g = 0;
		var _g1 = before.childList;
		while(_g < _g1.length) {
			var node = _g1[_g];
			++_g;
			switch(node._hx_index) {
			case 0:
				var _g2 = node.ref;
				if(_g2 != null) {
					_g2(null);
				}
				break;
			case 1:
				var _g4 = node.ref;
				if(_g4 != null) {
					_g4(null);
				}
				break;
			default:
			}
		}
		var previous = function(t,key) {
			var _g21 = before.byType.h[t.__id__];
			if(_g21 == null) {
				return null;
			} else if(key == null) {
				return _g21.pull();
			} else {
				return _g21.get(key);
			}
		};
		var native = function(type,key1,nuAttr,nuChildren) {
			var _g22 = previous(type,key1);
			if(_g22 == null) {
				return _gthis.createNative(type,nuAttr,nuChildren,parent,later);
			} else if(_g22._hx_index == 0) {
				var _g41 = _g22.r;
				type.update(_g41,_g22.a,nuAttr);
				_gthis._render(nuChildren,_g41,parent,later);
				return _g41;
			} else {
				throw new js__$Boot_HaxeError("assert");
			}
		};
		var after = this._renderAll(nodes,later,parent,{ native : native, widget : function(type1,key2,attr) {
			var _g23 = previous(type1,key2);
			if(_g23 == null) {
				return _gthis.createWidget(type1,attr,parent,later);
			} else if(_g23._hx_index == 1) {
				var _g3 = _g23.w;
				type1.update(attr,_g3);
				return _g3;
			} else {
				throw new js__$Boot_HaxeError("assert");
			}
		}, widgetInst : function(w) {
			var _g24 = previous(coconut_diffing_Differ.WIDGET_INST,coconut_diffing__$Key_Key_$Impl_$.ofObject(w));
			if(_g24 == null) {
				_gthis.mountInstance(w,parent,later);
			} else if(_g24._hx_index != 1) {
				throw new js__$Boot_HaxeError("assert");
			}
			return;
		}});
		var registry = before.byType.iterator();
		while(registry.hasNext()) {
			var registry1 = registry.next();
			var f = $bind(this,this.destroyRender);
			if(registry1.keyed != null) {
				var _this = registry1.keyed;
				var v = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
				while(v.hasNext()) f(v.next());
			}
			if(registry1.unkeyed != null) {
				var _g5 = 0;
				var _g11 = registry1.unkeyed;
				while(_g5 < _g11.length) f(_g11[_g5++]);
			}
		}
		return after;
	}
	,destroyRender: function(r) {
		switch(r._hx_index) {
		case 0:
			var _g = this.applicator.unsetLastRender(r.r);
			if(_g != null) {
				var _g2 = _g.childList;
				var _g1 = 0;
				while(_g1 < _g2.length) this.destroyRender(_g2[_g1++]);
			}
			break;
		case 1:
			r.w._coco_teardown();
			break;
		}
	}
	,_render: function(nodes,target,parent,later) {
		var lastCount = 0;
		var ret;
		var _g = this.applicator.getLastRender(target);
		if(_g == null) {
			ret = this.renderAll(nodes,parent,later);
		} else {
			_g.each(later,function(_) {
				lastCount += 1;
			});
			ret = this.updateAll(_g,nodes,parent,later);
		}
		this.applicator.setLastRender(target,ret);
		var tmp = this.applicator.traverseChildren(target);
		this.setChildren(later,lastCount,tmp,ret);
		return ret;
	}
	,setChildren: function(later,previousCount,cursor,next,log) {
		var insertedCount = 0;
		var currentCount = 0;
		next.each(later,function(r) {
			currentCount += 1;
			if(r == cursor.current()) {
				cursor.step();
			} else if(cursor.insert(r)) {
				insertedCount += 1;
			}
		});
		var deleteCount = previousCount + insertedCount - currentCount;
		if(log) {
			console.log("coconut/diffing/Differ.hx:197:",deleteCount);
		}
		var _g = 0;
		while(_g < deleteCount) {
			++_g;
			if(!cursor.delete()) {
				break;
			}
		}
	}
	,render: function(virtual,target) {
		var _gthis = this;
		this.run(function(later) {
			return _gthis._render(virtual,target,null,later);
		});
	}
	,run: function(f) {
		var after = [];
		var ret = f(function(later) {
			if(later != null) {
				after.push(later);
			}
		});
		var _g = 0;
		while(_g < after.length) after[_g++]();
		return ret;
	}
	,createNative: function(type,attr,children,parent,later) {
		var ret = type.create(attr);
		this._render(children,ret,parent,later);
		return ret;
	}
	,__class__: coconut_diffing_Differ
};
var coconut_diffing__$Key_Key_$Impl_$ = {};
coconut_diffing__$Key_Key_$Impl_$.__name__ = true;
coconut_diffing__$Key_Key_$Impl_$.ofFloat = function(f) {
	if(f == null) {
		return "null";
	} else {
		return "" + f;
	}
};
coconut_diffing__$Key_Key_$Impl_$.ofObject = function(o) {
	return coconut_diffing__$Key_Key_$Impl_$.ofFloat(o.__id__ || (o.__id__ = $global.$haxeUID++));
};
var coconut_diffing__$Key_KeyMap_$Impl_$ = {};
coconut_diffing__$Key_KeyMap_$Impl_$.__name__ = true;
coconut_diffing__$Key_KeyMap_$Impl_$._new = function() {
	return new haxe_ds_StringMap();
};
coconut_diffing__$Key_KeyMap_$Impl_$.get = function(this1,key) {
	var _g = __map_reserved[key] != null ? this1.getReserved(key) : this1.h[key];
	if(_g == null) {
		return null;
	} else {
		this1.remove(key);
		return _g;
	}
};
coconut_diffing__$Key_KeyMap_$Impl_$.each = function(this1,f) {
	var v = new haxe_ds__$StringMap_StringMapIterator(this1,this1.arrayKeys());
	while(v.hasNext()) f(v.next());
};
var coconut_diffing_RNode = $hxEnums["coconut.diffing.RNode"] = { __ename__ : true, __constructs__ : ["RNative","RWidget"]
	,RNative: ($_=function(a,r,ref) { return {_hx_index:0,a:a,r:r,ref:ref,__enum__:"coconut.diffing.RNode",toString:$estr}; },$_.__params__ = ["a","r","ref"],$_)
	,RWidget: ($_=function(w,ref) { return {_hx_index:1,w:w,ref:ref,__enum__:"coconut.diffing.RNode",toString:$estr}; },$_.__params__ = ["w","ref"],$_)
};
var coconut_diffing_Rendered = function(byType,childList) {
	this.byType = byType;
	this.childList = childList;
};
coconut_diffing_Rendered.__name__ = true;
coconut_diffing_Rendered.prototype = {
	flatten: function(later) {
		var ret = [];
		this.each(later,function(r) {
			ret.push(r);
		});
		return ret;
	}
	,first: function(later) {
		try {
			this.each(later,function(r) {
				throw new js__$Boot_HaxeError({ F : r});
			});
		} catch( d ) {
			var d1 = ((d) instanceof js__$Boot_HaxeError) ? d.val : d;
			if(d1.F != null) {
				return d1.F;
			} else {
				throw js__$Boot_HaxeError.wrap(d1);
			}
		}
		return null;
	}
	,each: function(later,f) {
		var rec = null;
		rec = function(children) {
			var _g = 0;
			while(_g < children.length) {
				var c = children[_g];
				++_g;
				switch(c._hx_index) {
				case 0:
					f(c.r);
					break;
				case 1:
					rec(c.w._coco_getRender(later).childList);
					break;
				}
			}
		};
		rec(this.childList);
	}
	,__class__: coconut_diffing_Rendered
};
var coconut_diffing_TypeRegistry = function() {
};
coconut_diffing_TypeRegistry.__name__ = true;
coconut_diffing_TypeRegistry.prototype = {
	get: function(key) {
		if(this.keyed == null) {
			return null;
		} else {
			var this1 = this.keyed;
			var _this = this1;
			var _g = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
			if(_g == null) {
				return null;
			} else {
				this1.remove(key);
				return _g;
			}
		}
	}
	,set: function(key,value) {
		if(this.keyed == null) {
			this.keyed = new haxe_ds_StringMap();
		}
		var _this = this.keyed;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,value);
		} else {
			_this.h[key] = value;
		}
	}
	,put: function(v) {
		if(this.unkeyed == null) {
			this.unkeyed = [];
		}
		this.unkeyed.push(v);
	}
	,pull: function() {
		if(this.unkeyed == null) {
			return null;
		} else {
			return this.unkeyed.shift();
		}
	}
	,__class__: coconut_diffing_TypeRegistry
};
var coconut_diffing__$VNode_VNode_$Impl_$ = {};
coconut_diffing__$VNode_VNode_$Impl_$.__name__ = true;
coconut_diffing__$VNode_VNode_$Impl_$.native = function(type,ref,key,attr,children) {
	return coconut_diffing_VNodeData.VNative(type,ref,key,attr,children);
};
coconut_diffing__$VNode_VNode_$Impl_$.fragment = function(attr,children) {
	return coconut_diffing_VNodeData.VMany(children);
};
var coconut_diffing_VNodeData = $hxEnums["coconut.diffing.VNodeData"] = { __ename__ : true, __constructs__ : ["VNativeInst","VWidgetInst","VMany","VNative","VWidget"]
	,VNativeInst: ($_=function(n) { return {_hx_index:0,n:n,__enum__:"coconut.diffing.VNodeData",toString:$estr}; },$_.__params__ = ["n"],$_)
	,VWidgetInst: ($_=function(w) { return {_hx_index:1,w:w,__enum__:"coconut.diffing.VNodeData",toString:$estr}; },$_.__params__ = ["w"],$_)
	,VMany: ($_=function(nodes) { return {_hx_index:2,nodes:nodes,__enum__:"coconut.diffing.VNodeData",toString:$estr}; },$_.__params__ = ["nodes"],$_)
	,VNative: ($_=function(type,ref,key,a,children) { return {_hx_index:3,type:type,ref:ref,key:key,a:a,children:children,__enum__:"coconut.diffing.VNodeData",toString:$estr}; },$_.__params__ = ["type","ref","key","a","children"],$_)
	,VWidget: ($_=function(type,ref,key,a) { return {_hx_index:4,type:type,ref:ref,key:key,a:a,__enum__:"coconut.diffing.VNodeData",toString:$estr}; },$_.__params__ = ["type","ref","key","a"],$_)
};
var coconut_ui__$Children_Children_$Impl_$ = {};
coconut_ui__$Children_Children_$Impl_$.__name__ = true;
coconut_ui__$Children_Children_$Impl_$.get_length = function(this1) {
	if(this1 == null) {
		return 0;
	} else {
		return this1.length;
	}
};
coconut_ui__$Children_Children_$Impl_$.get = function(this1,index) {
	if(this1 == null) {
		return null;
	} else {
		return this1[index];
	}
};
coconut_ui__$Children_Children_$Impl_$.ofSingle = function(r) {
	return [r];
};
coconut_ui__$Children_Children_$Impl_$.concat = function(this1,that) {
	if(this1 == null) {
		return that;
	} else {
		return this1.concat(that);
	}
};
coconut_ui__$Children_Children_$Impl_$.prepend = function(this1,r) {
	if(this1 == null) {
		if(r == null) {
			return null;
		} else {
			return coconut_ui__$Children_Children_$Impl_$.ofSingle(r);
		}
	} else if(r == null) {
		return this1;
	} else {
		return [r].concat(this1);
	}
};
coconut_ui__$Children_Children_$Impl_$.append = function(this1,r) {
	if(this1 == null) {
		if(r == null) {
			return null;
		} else {
			return coconut_ui__$Children_Children_$Impl_$.ofSingle(r);
		}
	} else if(r == null) {
		return this1;
	} else {
		return this1.concat([r]);
	}
};
var coconut_ui__$RenderResult_RenderResult_$Impl_$ = {};
coconut_ui__$RenderResult_RenderResult_$Impl_$.__name__ = true;
coconut_ui__$RenderResult_RenderResult_$Impl_$._new = function(n) {
	return n;
};
coconut_ui__$RenderResult_RenderResult_$Impl_$.ofText = function(s) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom__$Html_Text.inst,null,null,s,null);
};
coconut_ui__$RenderResult_RenderResult_$Impl_$.ofInt = function(i) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom__$Html_Text.inst,null,null,i == null ? "null" : "" + i,null);
};
coconut_ui__$RenderResult_RenderResult_$Impl_$.ofNode = function(n) {
	return coconut_diffing_VNodeData.VNativeInst(n);
};
coconut_ui__$RenderResult_RenderResult_$Impl_$.ofView = function(v) {
	return coconut_diffing_VNodeData.VWidgetInst(v);
};
var coconut_vdom__$Html_Text = function() {
};
coconut_vdom__$Html_Text.__name__ = true;
coconut_vdom__$Html_Text.prototype = {
	create: function(text) {
		return window.document.createTextNode(text);
	}
	,update: function(target,old,nu) {
		if(nu != old) {
			target.textContent = nu;
		}
	}
	,__class__: coconut_vdom__$Html_Text
};
var coconut_ui__$Renderer_DomBackend = function() {
};
coconut_ui__$Renderer_DomBackend.__name__ = true;
coconut_ui__$Renderer_DomBackend.prototype = {
	unsetLastRender: function(target) {
		var ret = target._coco_;
		delete target._coco_;
		return ret;
	}
	,traverseSiblings: function(first) {
		return new coconut_ui__$Renderer_DomCursor(first.parentNode,first);
	}
	,traverseChildren: function(parent) {
		return new coconut_ui__$Renderer_DomCursor(parent,parent.firstChild);
	}
	,placeholder: function(target) {
		return coconut_ui__$Renderer_DomBackend.PLACEHOLDER;
	}
	,getLastRender: function(target) {
		return target._coco_;
	}
	,setLastRender: function(target,r) {
		target._coco_ = r;
	}
	,__class__: coconut_ui__$Renderer_DomBackend
};
var coconut_ui_Renderer = function() { };
coconut_ui_Renderer.__name__ = true;
coconut_ui_Renderer.mount = function(target,vdom) {
	coconut_ui_Renderer.DIFFER.render([vdom],target);
};
coconut_ui_Renderer.getNative = function(view) {
	return coconut_ui_Renderer.getAllNative(view)[0];
};
coconut_ui_Renderer.getAllNative = function(view) {
	var _g = view._coco_lastRender;
	if(_g == null) {
		return [];
	} else {
		return _g.flatten(null);
	}
};
coconut_ui_Renderer.updateAll = function() {
	tink_state__$Observable_Observable_$Impl_$.updateAll();
};
var coconut_ui__$Renderer_DomCursor = function(parent,cur) {
	this.parent = parent;
	this.cur = cur;
};
coconut_ui__$Renderer_DomCursor.__name__ = true;
coconut_ui__$Renderer_DomCursor.prototype = {
	insert: function(real) {
		var inserted = real.parentNode != this.parent;
		this.parent.insertBefore(real,this.cur);
		return inserted;
	}
	,step: function() {
		var _g = this.cur;
		if(_g == null) {
			return false;
		} else {
			return (this.cur = _g.nextSibling) != null;
		}
	}
	,'delete': function() {
		var _g = this.cur;
		if(_g == null) {
			return false;
		} else {
			this.cur = _g.nextSibling;
			this.parent.removeChild(_g);
			return true;
		}
	}
	,current: function() {
		return this.cur;
	}
	,__class__: coconut_ui__$Renderer_DomCursor
};
var coconut_ui_macros_Helper = function() { };
coconut_ui_macros_Helper.__name__ = true;
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var coconut_vdom__$Html_Elt = function(tag) {
	var _g = tag.split(":");
	var tmp;
	if(_g.length == 2) {
		var _g2 = _g[1];
		var _g1 = _g[0];
		var _this = coconut_vdom__$Html_Elt.namespaces;
		this.ns = __map_reserved[_g1] != null ? _this.getReserved(_g1) : _this.h[_g1];
		tmp = _g2;
	} else {
		tmp = tag;
	}
	this.tag = tmp;
};
coconut_vdom__$Html_Elt.__name__ = true;
coconut_vdom__$Html_Elt.setField = function(target,name,newVal,oldVal) {
	target[name] = newVal;
};
coconut_vdom__$Html_Elt.setSvgProp = function(element,name,newVal,oldVal) {
	switch(name) {
	case "viewBox":
		if(newVal == null) {
			element.removeAttributeNS("http://www.w3.org/2000/svg",name);
		} else {
			element.setAttributeNS("http://www.w3.org/2000/svg",name,newVal);
		}
		break;
	case "xmlns":
		break;
	default:
		if(name in element) {
			switch(name) {
			case "attributes":
				var newProps = newVal;
				var oldProps = oldVal;
				var updateProp = coconut_vdom__$Html_Elt.updateAttribute;
				if(newProps != oldProps) {
					var keys;
					if(newProps == null) {
						newProps = coconut_diffing_Differ.EMPTY;
						keys = oldProps;
					} else if(oldProps == null) {
						oldProps = coconut_diffing_Differ.EMPTY;
						keys = newProps;
					} else {
						var ret = Reflect.copy(newProps);
						var _g = 0;
						var _g1 = Reflect.fields(oldProps);
						while(_g < _g1.length) {
							var key = _g1[_g];
							++_g;
							ret[key] = true;
						}
						keys = ret;
					}
					var _g2 = 0;
					var _g11 = Reflect.fields(keys);
					while(_g2 < _g11.length) {
						var key1 = _g11[_g2];
						++_g2;
						var _g3 = oldProps[key1];
						var _g12 = newProps[key1];
						if(_g12 == null) {
							var b = _g3;
							var a = _g12;
							if(a != b) {
								var old = _g3;
								var nu = _g12;
								updateProp(element,key1,nu,old);
							}
						} else {
							var b1 = _g3;
							var a1 = _g12;
							if(a1 != b1) {
								var old1 = _g3;
								var nu1 = _g12;
								updateProp(element,key1,nu1,old1);
							}
						}
					}
				}
				break;
			case "className":
				if(!newVal) {
					element.removeAttribute("class");
				} else if(newVal == null) {
					if(element.hasAttribute(name)) {
						element.removeAttribute(name);
					} else if(HxOverrides.cca(name,0) == 111 && HxOverrides.cca(name,1) == 110) {
						element[name] = null;
					} else {
						delete element[name];
					}
				} else {
					element[name] = newVal;
				}
				break;
			case "style":
				var target = element.style;
				var newProps1 = newVal;
				var oldProps1 = oldVal;
				var updateProp1 = coconut_vdom__$Html_Elt.setField;
				if(newProps1 != oldProps1) {
					var keys1;
					if(newProps1 == null) {
						newProps1 = coconut_diffing_Differ.EMPTY;
						keys1 = oldProps1;
					} else if(oldProps1 == null) {
						oldProps1 = coconut_diffing_Differ.EMPTY;
						keys1 = newProps1;
					} else {
						var ret1 = Reflect.copy(newProps1);
						var _g4 = 0;
						var _g13 = Reflect.fields(oldProps1);
						while(_g4 < _g13.length) {
							var key2 = _g13[_g4];
							++_g4;
							ret1[key2] = true;
						}
						keys1 = ret1;
					}
					var _g5 = 0;
					var _g14 = Reflect.fields(keys1);
					while(_g5 < _g14.length) {
						var key3 = _g14[_g5];
						++_g5;
						var _g6 = oldProps1[key3];
						var _g15 = newProps1[key3];
						if(_g15 == null) {
							var b2 = _g6;
							var a2 = _g15;
							if(a2 != b2) {
								var old2 = _g6;
								var nu2 = _g15;
								updateProp1(target,key3,nu2,old2);
							}
						} else {
							var b3 = _g6;
							var a3 = _g15;
							if(a3 != b3) {
								var old3 = _g6;
								var nu3 = _g15;
								updateProp1(target,key3,nu3,old3);
							}
						}
					}
				}
				break;
			default:
				if(newVal == null) {
					if(element.hasAttribute(name)) {
						element.removeAttribute(name);
					} else if(HxOverrides.cca(name,0) == 111 && HxOverrides.cca(name,1) == 110) {
						element[name] = null;
					} else {
						delete element[name];
					}
				} else {
					element[name] = newVal;
				}
			}
		} else if(newVal == null) {
			element.removeAttribute(name);
		} else {
			element.setAttribute(name,newVal);
		}
	}
};
coconut_vdom__$Html_Elt.setProp = function(element,name,newVal,oldVal) {
	switch(name) {
	case "attributes":
		var newProps = newVal;
		var oldProps = oldVal;
		var updateProp = coconut_vdom__$Html_Elt.updateAttribute;
		if(newProps != oldProps) {
			var keys;
			if(newProps == null) {
				newProps = coconut_diffing_Differ.EMPTY;
				keys = oldProps;
			} else if(oldProps == null) {
				oldProps = coconut_diffing_Differ.EMPTY;
				keys = newProps;
			} else {
				var ret = Reflect.copy(newProps);
				var _g = 0;
				var _g1 = Reflect.fields(oldProps);
				while(_g < _g1.length) {
					var key = _g1[_g];
					++_g;
					ret[key] = true;
				}
				keys = ret;
			}
			var _g2 = 0;
			var _g11 = Reflect.fields(keys);
			while(_g2 < _g11.length) {
				var key1 = _g11[_g2];
				++_g2;
				var _g3 = oldProps[key1];
				var _g12 = newProps[key1];
				if(_g12 == null) {
					var b = _g3;
					var a = _g12;
					if(a != b) {
						var old = _g3;
						var nu = _g12;
						updateProp(element,key1,nu,old);
					}
				} else {
					var b1 = _g3;
					var a1 = _g12;
					if(a1 != b1) {
						var old1 = _g3;
						var nu1 = _g12;
						updateProp(element,key1,nu1,old1);
					}
				}
			}
		}
		break;
	case "className":
		if(!newVal) {
			element.removeAttribute("class");
		} else if(newVal == null) {
			if(element.hasAttribute(name)) {
				element.removeAttribute(name);
			} else if(HxOverrides.cca(name,0) == 111 && HxOverrides.cca(name,1) == 110) {
				element[name] = null;
			} else {
				delete element[name];
			}
		} else {
			element[name] = newVal;
		}
		break;
	case "style":
		var target = element.style;
		var newProps1 = newVal;
		var oldProps1 = oldVal;
		var updateProp1 = coconut_vdom__$Html_Elt.setField;
		if(newProps1 != oldProps1) {
			var keys1;
			if(newProps1 == null) {
				newProps1 = coconut_diffing_Differ.EMPTY;
				keys1 = oldProps1;
			} else if(oldProps1 == null) {
				oldProps1 = coconut_diffing_Differ.EMPTY;
				keys1 = newProps1;
			} else {
				var ret1 = Reflect.copy(newProps1);
				var _g4 = 0;
				var _g13 = Reflect.fields(oldProps1);
				while(_g4 < _g13.length) {
					var key2 = _g13[_g4];
					++_g4;
					ret1[key2] = true;
				}
				keys1 = ret1;
			}
			var _g5 = 0;
			var _g14 = Reflect.fields(keys1);
			while(_g5 < _g14.length) {
				var key3 = _g14[_g5];
				++_g5;
				var _g6 = oldProps1[key3];
				var _g15 = newProps1[key3];
				if(_g15 == null) {
					var b2 = _g6;
					var a2 = _g15;
					if(a2 != b2) {
						var old2 = _g6;
						var nu2 = _g15;
						updateProp1(target,key3,nu2,old2);
					}
				} else {
					var b3 = _g6;
					var a3 = _g15;
					if(a3 != b3) {
						var old3 = _g6;
						var nu3 = _g15;
						updateProp1(target,key3,nu3,old3);
					}
				}
			}
		}
		break;
	default:
		if(newVal == null) {
			if(element.hasAttribute(name)) {
				element.removeAttribute(name);
			} else if(HxOverrides.cca(name,0) == 111 && HxOverrides.cca(name,1) == 110) {
				element[name] = null;
			} else {
				delete element[name];
			}
		} else {
			element[name] = newVal;
		}
	}
};
coconut_vdom__$Html_Elt.updateAttribute = function(element,name,newVal,oldVal) {
	if(newVal == null) {
		element.removeAttribute(name);
	} else {
		element.setAttribute(name,newVal);
	}
};
coconut_vdom__$Html_Elt.prototype = {
	create: function(attr) {
		var ret = this.ns == null ? window.document.createElement(this.tag) : window.document.createElementNS(this.ns,this.tag);
		var newProps = attr;
		var oldProps = null;
		var updateProp = this.ns == "http://www.w3.org/2000/svg" ? coconut_vdom__$Html_Elt.setSvgProp : coconut_vdom__$Html_Elt.setProp;
		if(newProps != oldProps) {
			var keys;
			if(newProps == null) {
				newProps = coconut_diffing_Differ.EMPTY;
				keys = oldProps;
			} else {
				oldProps = coconut_diffing_Differ.EMPTY;
				keys = newProps;
			}
			var _g = 0;
			var _g1 = Reflect.fields(keys);
			while(_g < _g1.length) {
				var key = _g1[_g];
				++_g;
				var _g2 = oldProps[key];
				var _g11 = newProps[key];
				if(_g11 == null) {
					if(_g11 != _g2) {
						updateProp(ret,key,_g11,_g2);
					}
				} else if(_g11 != _g2) {
					updateProp(ret,key,_g11,_g2);
				}
			}
		}
		return ret;
	}
	,update: function(target,old,nu) {
		var newProps = nu;
		var oldProps = old;
		var updateProp = target.namespaceURI == "http://www.w3.org/2000/svg" ? coconut_vdom__$Html_Elt.setSvgProp : coconut_vdom__$Html_Elt.setProp;
		if(newProps != oldProps) {
			var keys;
			if(newProps == null) {
				newProps = coconut_diffing_Differ.EMPTY;
				keys = oldProps;
			} else if(oldProps == null) {
				oldProps = coconut_diffing_Differ.EMPTY;
				keys = newProps;
			} else {
				var ret = Reflect.copy(newProps);
				var _g = 0;
				var _g1 = Reflect.fields(oldProps);
				while(_g < _g1.length) ret[_g1[_g++]] = true;
				keys = ret;
			}
			var _g2 = 0;
			var _g11 = Reflect.fields(keys);
			while(_g2 < _g11.length) {
				var key = _g11[_g2];
				++_g2;
				var _g3 = oldProps[key];
				var _g12 = newProps[key];
				if(_g12 == null) {
					if(_g12 != _g3) {
						updateProp(target,key,_g12,_g3);
					}
				} else if(_g12 != _g3) {
					updateProp(target,key,_g12,_g3);
				}
			}
		}
	}
	,__class__: coconut_vdom__$Html_Elt
};
var coconut_vdom_Html = function() { };
coconut_vdom_Html.__name__ = true;
coconut_vdom_Html.nodeType = function(tag) {
	var _this = coconut_vdom_Html.nodeTypes;
	var _g = __map_reserved[tag] != null ? _this.getReserved(tag) : _this.h[tag];
	var tmp;
	if(_g == null) {
		var this1 = coconut_vdom_Html.nodeTypes;
		var v = new coconut_vdom__$Html_Elt(tag);
		var _this1 = this1;
		if(__map_reserved[tag] != null) {
			_this1.setReserved(tag,v);
		} else {
			_this1.h[tag] = v;
		}
		tmp = v;
	} else {
		tmp = _g;
	}
	return tmp;
};
coconut_vdom_Html.text = function(value) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom__$Html_Text.inst,null,null,value,null);
};
coconut_vdom_Html.h = function(tag,ref,key,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.nodeType(tag),ref,key,attr,children);
};
coconut_vdom_Html.raw = function(hxxMeta,attr) {
	return coconut_vdom__$Html_HtmlFragment.fromHxx(hxxMeta,attr);
};
coconut_vdom_Html.wbr = function(hxxMeta,attr) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.WBR,hxxMeta.ref,hxxMeta.key,attr,null);
};
coconut_vdom_Html.video = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.VIDEO,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.ul = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.UL,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.track = function(hxxMeta,attr) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.TRACK,hxxMeta.ref,hxxMeta.key,attr,null);
};
coconut_vdom_Html.tr = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.TR,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.title = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.TITLE,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.thead = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.THEAD,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.th = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.TH,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.tfoot = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.TFOOT,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.textarea = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.TEXTAREA,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.td = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.TD,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.tbody = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.TBODY,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.table = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.TABLE,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.svg = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.SVG,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.style = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.STYLE,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.strong = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.STRONG,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.span = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.SPAN,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.source = function(hxxMeta,attr) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.SOURCE,hxxMeta.ref,hxxMeta.key,attr,null);
};
coconut_vdom_Html.small = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.SMALL,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.select = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.SELECT,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.section = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.SECTION,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.script = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.SCRIPT,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.rect = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.RECT,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.pre = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.PRE,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.polygon = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.POLYGON,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.picture = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.PICTURE,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.path = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.PATH,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.param = function(hxxMeta,attr) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.PARAM,hxxMeta.ref,hxxMeta.key,attr,null);
};
coconut_vdom_Html.p = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.P,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.option = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.OPTION,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.ol = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.OL,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.object = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.OBJECT,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.nav = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.NAV,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.meta = function(hxxMeta,attr) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.META,hxxMeta.ref,hxxMeta.key,attr,null);
};
coconut_vdom_Html.menu = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.MENU,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.main = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.MAIN,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.link = function(hxxMeta,attr) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.LINK,hxxMeta.ref,hxxMeta.key,attr,null);
};
coconut_vdom_Html.li = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.LI,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.label = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.LABEL,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.ins = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.INS,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.input = function(hxxMeta,attr) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.INPUT,hxxMeta.ref,hxxMeta.key,attr,null);
};
coconut_vdom_Html.img = function(hxxMeta,attr) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.IMG,hxxMeta.ref,hxxMeta.key,attr,null);
};
coconut_vdom_Html.iframe = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.IFRAME,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.i = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.I,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.html = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.HTML,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.hr = function(hxxMeta,attr) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.HR,hxxMeta.ref,hxxMeta.key,attr,null);
};
coconut_vdom_Html.header = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.HEADER,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.head = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.HEAD,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.h6 = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.H6,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.h5 = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.H5,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.h4 = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.H4,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.h3 = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.H3,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.h2 = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.H2,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.h1 = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.H1,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.form = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.FORM,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.footer = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.FOOTER,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.fieldset = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.FIELDSET,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.embed = function(hxxMeta,attr) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.EMBED,hxxMeta.ref,hxxMeta.key,attr,null);
};
coconut_vdom_Html.em = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.EM,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.ellipse = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.ELLIPSE,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.dt = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.DT,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.dl = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.DL,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.div = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.DIV,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.del = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.DEL,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.dd = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.DD,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.circle = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.CIRCLE,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.canvas = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.CANVAS,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.button = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.BUTTON,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.br = function(hxxMeta,attr) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.BR,hxxMeta.ref,hxxMeta.key,attr,null);
};
coconut_vdom_Html.body = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.BODY,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.b = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.B,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.audio = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.AUDIO,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.aside = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.ASIDE,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.article = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.ARTICLE,hxxMeta.ref,hxxMeta.key,attr,children);
};
coconut_vdom_Html.a = function(hxxMeta,attr,children) {
	return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.A,hxxMeta.ref,hxxMeta.key,attr,children);
};
var coconut_vdom__$Html_HtmlFragment = function(__coco_data_) {
	var _gthis = this;
	this.__tink_defaults0 = { tag : tink_state__$Observable_Observable_$Impl_$.const("span"), className : null};
	this.__slots = { content : new coconut_ui_tools_Slot(this,null), tag : new coconut_ui_tools_Slot(this,null), className : new coconut_ui_tools_Slot(this,null)};
	this.__initAttributes(__coco_data_);
	coconut_ui_View.call(this,$bind(this,this.render),null,null,null,function() {
		var viewDidMount = tink_state__$Observable_Observable_$Impl_$.get_value(_gthis.__slots.tag);
		_gthis.lastContent = viewDidMount;
		var viewDidMount1 = tink_state__$Observable_Observable_$Impl_$.get_value(_gthis.__slots.content);
		_gthis.root.innerHTML = _gthis.lastContent = viewDidMount1;
	},function() {
		if(_gthis.lastContent != tink_state__$Observable_Observable_$Impl_$.get_value(_gthis.__slots.content) || _gthis.lastTag != tink_state__$Observable_Observable_$Impl_$.get_value(_gthis.__slots.tag)) {
			var viewDidUpdate = tink_state__$Observable_Observable_$Impl_$.get_value(_gthis.__slots.content);
			_gthis.root.innerHTML = viewDidUpdate;
			var viewDidUpdate1 = tink_state__$Observable_Observable_$Impl_$.get_value(_gthis.__slots.content);
			_gthis.lastContent = viewDidUpdate1;
			var viewDidUpdate2 = tink_state__$Observable_Observable_$Impl_$.get_value(_gthis.__slots.tag);
			_gthis.lastTag = viewDidUpdate2;
		}
	});
};
coconut_vdom__$Html_HtmlFragment.__name__ = true;
coconut_vdom__$Html_HtmlFragment.fromHxx = function(hxxMeta,attributes) {
	return coconut_diffing_VNodeData.VWidget(coconut_vdom__$Html_HtmlFragment.__type,hxxMeta.ref,hxxMeta.key,attributes);
};
coconut_vdom__$Html_HtmlFragment.__super__ = coconut_ui_View;
coconut_vdom__$Html_HtmlFragment.prototype = $extend(coconut_ui_View.prototype,{
	render: function() {
		var _gthis = this;
		var tag = tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.tag);
		var attr = { className : tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.className)};
		return coconut_diffing_VNodeData.VNative(coconut_vdom_Html.nodeType(tag),function(e) {
			_gthis.root = e;
		},null,attr,null);
	}
	,get_content: function() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.content);
	}
	,get_tag: function() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.tag);
	}
	,get_className: function() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this.__slots.className);
	}
	,__initAttributes: function(attributes) {
		this.__slots.content.setData(attributes.content);
		var this1 = attributes.tag;
		this.__slots.tag.setData(this1 == null ? this.__tink_defaults0.tag : this1);
		var this2 = attributes.className;
		this.__slots.className.setData(this2 == null ? this.__tink_defaults0.className : this2);
	}
	,__class__: coconut_vdom__$Html_HtmlFragment
});
var haxe_StackItem = $hxEnums["haxe.StackItem"] = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"]
	,CFunction: {_hx_index:0,__enum__:"haxe.StackItem",toString:$estr}
	,Module: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["m"],$_)
	,FilePos: ($_=function(s,file,line,column) { return {_hx_index:2,s:s,file:file,line:line,column:column,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["s","file","line","column"],$_)
	,Method: ($_=function(classname,method) { return {_hx_index:3,classname:classname,method:method,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["classname","method"],$_)
	,LocalFunction: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var haxe_ds_Either = $hxEnums["haxe.ds.Either"] = { __ename__ : true, __constructs__ : ["Left","Right"]
	,Left: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Either",toString:$estr}; },$_.__params__ = ["v"],$_)
	,Right: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"haxe.ds.Either",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
haxe_ds__$List_ListNode.__name__ = true;
haxe_ds__$List_ListNode.prototype = {
	__class__: haxe_ds__$List_ListNode
};
var haxe_ds_Option = $hxEnums["haxe.ds.Option"] = { __ename__ : true, __constructs__ : ["Some","None"]
	,Some: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Option",toString:$estr}; },$_.__params__ = ["v"],$_)
	,None: {_hx_index:1,__enum__:"haxe.ds.Option",toString:$estr}
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
haxe_ds__$StringMap_StringMapIterator.__name__ = true;
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if(((val) instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var pick_First = function() { };
pick_First.__name__ = true;
var tink_core_Annex = function(target) {
	this.target = target;
	this.registry = new haxe_ds_ObjectMap();
};
tink_core_Annex.__name__ = true;
tink_core_Annex.prototype = {
	__class__: tink_core_Annex
};
var tink_core__$Callback_CallbackLink_$Impl_$ = {};
tink_core__$Callback_CallbackLink_$Impl_$.__name__ = true;
tink_core__$Callback_CallbackLink_$Impl_$._new = function(link) {
	return new tink_core__$Callback_SimpleLink(link);
};
tink_core__$Callback_CallbackLink_$Impl_$.cancel = function(this1) {
	if(this1 != null) {
		this1.cancel();
	}
};
tink_core__$Callback_CallbackLink_$Impl_$.dissolve = function(this1) {
	if(this1 != null) {
		this1.cancel();
	}
};
tink_core__$Callback_CallbackLink_$Impl_$.noop = function() {
};
tink_core__$Callback_CallbackLink_$Impl_$.toFunction = function(this1) {
	if(this1 == null) {
		return tink_core__$Callback_CallbackLink_$Impl_$.noop;
	} else {
		return $bind(this1,this1.cancel);
	}
};
tink_core__$Callback_CallbackLink_$Impl_$.toCallback = function(this1) {
	return function(_) {
		this1.cancel();
	};
};
tink_core__$Callback_CallbackLink_$Impl_$.fromFunction = function(f) {
	return new tink_core__$Callback_SimpleLink(f);
};
tink_core__$Callback_CallbackLink_$Impl_$.join = function(a,b) {
	return new tink_core__$Callback_LinkPair(a,b);
};
tink_core__$Callback_CallbackLink_$Impl_$.fromMany = function(callbacks) {
	return new tink_core__$Callback_SimpleLink(function() {
		var _g = 0;
		while(_g < callbacks.length) {
			var cb = callbacks[_g];
			++_g;
			if(cb != null) {
				cb.cancel();
			}
		}
	});
};
var tink_core__$Callback_SimpleLink = function(f) {
	this.f = f;
};
tink_core__$Callback_SimpleLink.__name__ = true;
tink_core__$Callback_SimpleLink.prototype = {
	cancel: function() {
		if(this.f != null) {
			this.f();
			this.f = null;
		}
	}
	,__class__: tink_core__$Callback_SimpleLink
};
var tink_core__$Callback_LinkPair = function(a,b) {
	this.dissolved = false;
	this.a = a;
	this.b = b;
};
tink_core__$Callback_LinkPair.__name__ = true;
tink_core__$Callback_LinkPair.prototype = {
	cancel: function() {
		if(!this.dissolved) {
			this.dissolved = true;
			var this1 = this.a;
			if(this1 != null) {
				this1.cancel();
			}
			var this2 = this.b;
			if(this2 != null) {
				this2.cancel();
			}
			this.a = null;
			this.b = null;
		}
	}
	,__class__: tink_core__$Callback_LinkPair
};
var tink_core__$Callback_ListCell = function(cb,list) {
	if(cb == null) {
		throw new js__$Boot_HaxeError("callback expected but null received");
	}
	this.cb = cb;
	this.list = list;
};
tink_core__$Callback_ListCell.__name__ = true;
tink_core__$Callback_ListCell.prototype = {
	invoke: function(data) {
		if(this.cb != null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(this.cb,data);
		}
	}
	,clear: function() {
		this.list = null;
		this.cb = null;
	}
	,cancel: function() {
		var _g = this.list;
		if(_g != null) {
			this.clear();
			HxOverrides.remove(_g,this);
		}
	}
	,__class__: tink_core__$Callback_ListCell
};
var tink_core__$Callback_CallbackList_$Impl_$ = {};
tink_core__$Callback_CallbackList_$Impl_$.__name__ = true;
tink_core__$Callback_CallbackList_$Impl_$._new = function() {
	return [];
};
tink_core__$Callback_CallbackList_$Impl_$.get_length = function(this1) {
	return this1.length;
};
tink_core__$Callback_CallbackList_$Impl_$.add = function(this1,cb) {
	var node = new tink_core__$Callback_ListCell(cb,this1);
	this1.push(node);
	return node;
};
tink_core__$Callback_CallbackList_$Impl_$.invoke = function(this1,data) {
	var _g = 0;
	var _g1 = this1.slice();
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		if(cell.cb != null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(cell.cb,data);
		}
	}
};
tink_core__$Callback_CallbackList_$Impl_$.clear = function(this1) {
	var _g = 0;
	var _g1 = this1.splice(0,this1.length);
	while(_g < _g1.length) _g1[_g++].clear();
};
tink_core__$Callback_CallbackList_$Impl_$.invokeAndClear = function(this1,data) {
	var _g = 0;
	var _g1 = this1.splice(0,this1.length);
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		if(cell.cb != null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(cell.cb,data);
		}
	}
};
var tink_core__$Error_Stack_$Impl_$ = {};
tink_core__$Error_Stack_$Impl_$.__name__ = true;
tink_core__$Error_Stack_$Impl_$.toString = function(this1) {
	return "Error stack not available. Compile with -D error_stack.";
};
var tink_core__$Future_NeverFuture = function() {
};
tink_core__$Future_NeverFuture.__name__ = true;
tink_core__$Future_NeverFuture.prototype = {
	map: function(f) {
		return tink_core__$Future_NeverFuture.inst;
	}
	,flatMap: function(f) {
		return tink_core__$Future_NeverFuture.inst;
	}
	,handle: function(callback) {
		return null;
	}
	,gather: function() {
		return tink_core__$Future_NeverFuture.inst;
	}
	,eager: function() {
		return tink_core__$Future_NeverFuture.inst;
	}
	,__class__: tink_core__$Future_NeverFuture
};
var tink_core__$Lazy_LazyConst = function(value) {
	this.value = value;
};
tink_core__$Lazy_LazyConst.__name__ = true;
tink_core__$Lazy_LazyConst.prototype = {
	get: function() {
		return this.value;
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			return f(_gthis.value);
		});
	}
	,flatMap: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			return f(_gthis.value).get();
		});
	}
	,__class__: tink_core__$Lazy_LazyConst
};
var tink_core__$Future_SyncFuture = function(value) {
	this.value = value;
};
tink_core__$Future_SyncFuture.__name__ = true;
tink_core__$Future_SyncFuture.prototype = {
	map: function(f) {
		return new tink_core__$Future_SyncFuture(this.value.map(f));
	}
	,flatMap: function(f) {
		var l = this.value.map(f);
		return new tink_core__$Future_SimpleFuture(function(cb) {
			return l.get().handle(cb);
		});
	}
	,handle: function(cb) {
		tink_core__$Callback_Callback_$Impl_$.invoke(cb,this.value.get());
		return null;
	}
	,eager: function() {
		return this;
	}
	,gather: function() {
		return this;
	}
	,__class__: tink_core__$Future_SyncFuture
};
var tink_core__$Future_Future_$Impl_$ = {};
tink_core__$Future_Future_$Impl_$.__name__ = true;
tink_core__$Future_Future_$Impl_$._new = function(f) {
	return new tink_core__$Future_SimpleFuture(f);
};
tink_core__$Future_Future_$Impl_$.first = function(this1,other) {
	var ret = new tink_core_FutureTrigger();
	var l1 = this1.handle($bind(ret,ret.trigger));
	var l2 = other.handle($bind(ret,ret.trigger));
	var ret1 = ret;
	if(l1 != null) {
		var this2 = l1;
		ret1.handle(function(_) {
			this2.cancel();
		});
	}
	if(l2 != null) {
		var this3 = l2;
		ret1.handle(function(_1) {
			this3.cancel();
		});
	}
	return ret1;
};
tink_core__$Future_Future_$Impl_$.map = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.map(f);
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.flatMap = function(this1,next,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(next);
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.next = function(this1,n) {
	return this1.flatMap(function(v) {
		return n(v);
	});
};
tink_core__$Future_Future_$Impl_$.merge = function(this1,other,merger,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(function(t) {
		return other.map(function(a) {
			return merger(t,a);
		});
	});
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.flatten = function(f) {
	return new tink_core__$Future_NestedFuture(f);
};
tink_core__$Future_Future_$Impl_$.ofJsPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		promise.then(function(a) {
			cb(tink_core_Outcome.Success(a));
		}).catch(function(e) {
			var tmp = tink_core_Outcome.Failure(tink_core_TypedError.withData(null,e.message,e,{ fileName : "tink/core/Future.hx", lineNumber : 83, className : "tink.core._Future.Future_Impl_", methodName : "ofJsPromise"}));
			cb(tmp);
		});
	});
};
tink_core__$Future_Future_$Impl_$.ofAny = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
tink_core__$Future_Future_$Impl_$.asPromise = function(s) {
	return s;
};
tink_core__$Future_Future_$Impl_$.ofMany = function(futures,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst([]));
	var _g = 0;
	while(_g < futures.length) ret = ret.flatMap((function(f) {
		return function(results) {
			var ret1 = (function() {
				return function(result) {
					return results.concat([result]);
				};
			})();
			return f[0].map(ret1);
		};
	})([futures[_g++]]));
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.fromMany = function(futures) {
	return tink_core__$Future_Future_$Impl_$.ofMany(futures);
};
tink_core__$Future_Future_$Impl_$.lazy = function(l) {
	return new tink_core__$Future_SyncFuture(l);
};
tink_core__$Future_Future_$Impl_$.sync = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
tink_core__$Future_Future_$Impl_$.async = function(f,lazy) {
	if(lazy == null) {
		lazy = false;
	}
	if(lazy) {
		return new tink_core__$Future_LazyTrigger(f);
	} else {
		var op = new tink_core_FutureTrigger();
		tink_core__$Callback_Callback_$Impl_$.invoke(f,$bind(op,op.trigger));
		return op;
	}
};
tink_core__$Future_Future_$Impl_$.or = function(a,b) {
	return tink_core__$Future_Future_$Impl_$.first(a,b);
};
tink_core__$Future_Future_$Impl_$.either = function(a,b) {
	return tink_core__$Future_Future_$Impl_$.first(a.map(haxe_ds_Either.Left),b.map(haxe_ds_Either.Right));
};
tink_core__$Future_Future_$Impl_$.and = function(a,b) {
	return tink_core__$Future_Future_$Impl_$.merge(a,b,function(a1,b1) {
		return new tink_core_MPair(a1,b1);
	});
};
tink_core__$Future_Future_$Impl_$._tryFailingFlatMap = function(f,map) {
	return f.flatMap(function(o) {
		switch(o._hx_index) {
		case 0:
			return map(o.data);
		case 1:
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(o.failure)));
		}
	}).gather();
};
tink_core__$Future_Future_$Impl_$._tryFlatMap = function(f,map) {
	return f.flatMap(function(o) {
		switch(o._hx_index) {
		case 0:
			return map(o.data).map(tink_core_Outcome.Success).gather();
		case 1:
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(o.failure)));
		}
	}).gather();
};
tink_core__$Future_Future_$Impl_$._tryFailingMap = function(f,map) {
	return f.map(function(o) {
		return tink_core_OutcomeTools.flatMap(o,tink_core__$Outcome_OutcomeMapper_$Impl_$.withSameError(map));
	}).gather();
};
tink_core__$Future_Future_$Impl_$._tryMap = function(f,map) {
	return f.map(function(o) {
		return tink_core_OutcomeTools.map(o,map);
	}).gather();
};
tink_core__$Future_Future_$Impl_$._flatMap = function(f,map) {
	return f.flatMap(map).gather();
};
tink_core__$Future_Future_$Impl_$._map = function(f,map) {
	return f.map(map).gather();
};
tink_core__$Future_Future_$Impl_$.trigger = function() {
	return new tink_core_FutureTrigger();
};
tink_core__$Future_Future_$Impl_$.delay = function(ms,value) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		haxe_Timer.delay(function() {
			cb(value.get());
		},ms);
	});
};
var tink_core__$Future_NestedFuture = function(outer) {
	this.outer = outer;
};
tink_core__$Future_NestedFuture.__name__ = true;
tink_core__$Future_NestedFuture.prototype = {
	map: function(f) {
		return this.outer.flatMap(function(inner) {
			return inner.map(f).gather();
		}).gather();
	}
	,flatMap: function(f) {
		return this.outer.flatMap(function(inner) {
			return inner.flatMap(f).gather();
		}).gather();
	}
	,gather: function() {
		if(this.gathered != null) {
			return this.gathered;
		} else {
			return this.gathered = tink_core_FutureTrigger.gatherFuture(this);
		}
	}
	,eager: function() {
		var ret = this.gathered != null ? this.gathered : this.gathered = tink_core_FutureTrigger.gatherFuture(this);
		ret.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		}));
		return ret;
	}
	,handle: function(cb) {
		var ret = null;
		ret = this.outer.handle(function(inner) {
			ret = inner.handle(function(result) {
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,result);
			});
		});
		return ret;
	}
	,__class__: tink_core__$Future_NestedFuture
};
var tink_core__$Future_LazyTrigger = function(op) {
	this.op = op;
	tink_core_FutureTrigger.call(this);
};
tink_core__$Future_LazyTrigger.__name__ = true;
tink_core__$Future_LazyTrigger.__super__ = tink_core_FutureTrigger;
tink_core__$Future_LazyTrigger.prototype = $extend(tink_core_FutureTrigger.prototype,{
	eager: function() {
		if(this.op != null) {
			var op = this.op;
			this.op = null;
			tink_core__$Callback_Callback_$Impl_$.invoke(op,$bind(this,this.trigger));
		}
		return this;
	}
	,map: function(f) {
		var _gthis = this;
		if(this.op == null) {
			return tink_core_FutureTrigger.prototype.map.call(this,f);
		} else {
			return tink_core__$Future_Future_$Impl_$.async(function(cb) {
				_gthis.handle(function(v) {
					var tmp = f(v);
					cb(tmp);
				});
			},true);
		}
	}
	,flatMap: function(f) {
		var _gthis = this;
		if(this.op == null) {
			return tink_core_FutureTrigger.prototype.flatMap.call(this,f);
		} else {
			return tink_core__$Future_Future_$Impl_$.async(function(cb) {
				_gthis.handle(function(v) {
					f(v).handle(cb);
				});
			},true);
		}
	}
	,handle: function(cb) {
		this.eager();
		return tink_core_FutureTrigger.prototype.handle.call(this,cb);
	}
	,__class__: tink_core__$Future_LazyTrigger
});
var tink_core_JsPromiseTools = function() { };
tink_core_JsPromiseTools.__name__ = true;
tink_core_JsPromiseTools.toSurprise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
tink_core_JsPromiseTools.toPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
var tink_core__$Lazy_Lazy_$Impl_$ = {};
tink_core__$Lazy_Lazy_$Impl_$.__name__ = true;
tink_core__$Lazy_Lazy_$Impl_$.get = function(this1) {
	return this1.get();
};
tink_core__$Lazy_Lazy_$Impl_$.ofFunc = function(f) {
	return new tink_core__$Lazy_LazyFunc(f);
};
tink_core__$Lazy_Lazy_$Impl_$.map = function(this1,f) {
	return this1.map(f);
};
tink_core__$Lazy_Lazy_$Impl_$.flatMap = function(this1,f) {
	return this1.flatMap(f);
};
tink_core__$Lazy_Lazy_$Impl_$.ofConst = function(c) {
	return new tink_core__$Lazy_LazyConst(c);
};
var tink_core__$Lazy_LazyFunc = function(f) {
	this.f = f;
};
tink_core__$Lazy_LazyFunc.__name__ = true;
tink_core__$Lazy_LazyFunc.prototype = {
	get: function() {
		if(this.f != null) {
			this.result = this.f();
			this.f = null;
		}
		return this.result;
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var tmp = _gthis.get();
			return f(tmp);
		});
	}
	,flatMap: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var this1 = _gthis.get();
			return f(this1).get();
		});
	}
	,__class__: tink_core__$Lazy_LazyFunc
};
var tink_core_NamedWith = function(name,value) {
	this.name = name;
	this.value = value;
};
tink_core_NamedWith.__name__ = true;
tink_core_NamedWith.prototype = {
	__class__: tink_core_NamedWith
};
var tink_core_OptionTools = function() { };
tink_core_OptionTools.__name__ = true;
tink_core_OptionTools.force = function(o,pos) {
	if(o._hx_index == 0) {
		return o.v;
	} else {
		throw new js__$Boot_HaxeError(new tink_core_TypedError(404,"Some value expected but none found",pos));
	}
};
tink_core_OptionTools.or = function(o,l) {
	if(o._hx_index == 0) {
		return o.v;
	} else {
		return l.get();
	}
};
tink_core_OptionTools.orNull = function(o) {
	if(o._hx_index == 0) {
		return o.v;
	} else {
		return null;
	}
};
tink_core_OptionTools.filter = function(o,f) {
	if(o._hx_index == 0) {
		if(f(o.v) == false) {
			return haxe_ds_Option.None;
		} else {
			return o;
		}
	} else {
		return o;
	}
};
tink_core_OptionTools.satisfies = function(o,f) {
	if(o._hx_index == 0) {
		return f(o.v);
	} else {
		return false;
	}
};
tink_core_OptionTools.equals = function(o,v) {
	if(o._hx_index == 0) {
		return o.v == v;
	} else {
		return false;
	}
};
tink_core_OptionTools.map = function(o,f) {
	if(o._hx_index == 0) {
		return haxe_ds_Option.Some(f(o.v));
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.flatMap = function(o,f) {
	if(o._hx_index == 0) {
		return f(o.v);
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.iterator = function(o) {
	return new tink_core_OptionIter(o);
};
tink_core_OptionTools.toArray = function(o) {
	if(o._hx_index == 0) {
		return [o.v];
	} else {
		return [];
	}
};
var tink_core_OptionIter = function(o) {
	this.alive = true;
	if(o._hx_index == 0) {
		this.value = o.v;
	} else {
		this.alive = false;
	}
};
tink_core_OptionIter.__name__ = true;
tink_core_OptionIter.prototype = {
	hasNext: function() {
		return this.alive;
	}
	,next: function() {
		this.alive = false;
		return this.value;
	}
	,__class__: tink_core_OptionIter
};
var tink_core_Outcome = $hxEnums["tink.core.Outcome"] = { __ename__ : true, __constructs__ : ["Success","Failure"]
	,Success: ($_=function(data) { return {_hx_index:0,data:data,__enum__:"tink.core.Outcome",toString:$estr}; },$_.__params__ = ["data"],$_)
	,Failure: ($_=function(failure) { return {_hx_index:1,failure:failure,__enum__:"tink.core.Outcome",toString:$estr}; },$_.__params__ = ["failure"],$_)
};
var tink_core_OutcomeTools = function() { };
tink_core_OutcomeTools.__name__ = true;
tink_core_OutcomeTools.sure = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		return outcome.data;
	case 1:
		var _g1 = outcome.failure;
		var _g = tink_core_TypedError.asError(_g1);
		if(_g == null) {
			throw new js__$Boot_HaxeError(_g1);
		} else {
			return _g.throwSelf();
		}
		break;
	}
};
tink_core_OutcomeTools.toOption = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		return haxe_ds_Option.Some(outcome.data);
	case 1:
		return haxe_ds_Option.None;
	}
};
tink_core_OutcomeTools.toOutcome = function(option,pos) {
	switch(option._hx_index) {
	case 0:
		return tink_core_Outcome.Success(option.v);
	case 1:
		return tink_core_Outcome.Failure(new tink_core_TypedError(404,"Some value expected but none found in " + pos.fileName + "@line " + pos.lineNumber,{ fileName : "tink/core/Outcome.hx", lineNumber : 47, className : "tink.core.OutcomeTools", methodName : "toOutcome"}));
	}
};
tink_core_OutcomeTools.orNull = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		return outcome.data;
	case 1:
		return null;
	}
};
tink_core_OutcomeTools.orUse = function(outcome,fallback) {
	switch(outcome._hx_index) {
	case 0:
		return outcome.data;
	case 1:
		return fallback.get();
	}
};
tink_core_OutcomeTools.orTry = function(outcome,fallback) {
	switch(outcome._hx_index) {
	case 0:
		return outcome;
	case 1:
		return fallback.get();
	}
};
tink_core_OutcomeTools.equals = function(outcome,to) {
	switch(outcome._hx_index) {
	case 0:
		return outcome.data == to;
	case 1:
		return false;
	}
};
tink_core_OutcomeTools.map = function(outcome,transform) {
	switch(outcome._hx_index) {
	case 0:
		return tink_core_Outcome.Success(transform(outcome.data));
	case 1:
		return tink_core_Outcome.Failure(outcome.failure);
	}
};
tink_core_OutcomeTools.isSuccess = function(outcome) {
	if(outcome._hx_index == 0) {
		return true;
	} else {
		return false;
	}
};
tink_core_OutcomeTools.flatMap = function(o,mapper) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$.apply(mapper,o);
};
tink_core_OutcomeTools.swap = function(outcome,v) {
	switch(outcome._hx_index) {
	case 0:
		return tink_core_Outcome.Success(v);
	case 1:
		return tink_core_Outcome.Failure(outcome.failure);
	}
};
tink_core_OutcomeTools.attempt = function(f,report) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( e ) {
		return tink_core_Outcome.Failure(report(((e) instanceof js__$Boot_HaxeError) ? e.val : e));
	}
};
tink_core_OutcomeTools.flatten = function(o) {
	switch(o._hx_index) {
	case 0:
		var _g = o.data;
		switch(_g._hx_index) {
		case 0:
			return tink_core_Outcome.Success(_g.data);
		case 1:
			return tink_core_Outcome.Failure(_g.failure);
		}
		break;
	case 1:
		return tink_core_Outcome.Failure(o.failure);
	}
};
var tink_core__$Outcome_OutcomeMapper_$Impl_$ = {};
tink_core__$Outcome_OutcomeMapper_$Impl_$.__name__ = true;
tink_core__$Outcome_OutcomeMapper_$Impl_$._new = function(f) {
	return { f : f};
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.apply = function(this1,o) {
	return this1.f(o);
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.withSameError = function(f) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$._new(function(o) {
		switch(o._hx_index) {
		case 0:
			return f(o.data);
		case 1:
			return tink_core_Outcome.Failure(o.failure);
		}
	});
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.withEitherError = function(f) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$._new(function(o) {
		switch(o._hx_index) {
		case 0:
			var _g = f(o.data);
			switch(_g._hx_index) {
			case 0:
				return tink_core_Outcome.Success(_g.data);
			case 1:
				return tink_core_Outcome.Failure(haxe_ds_Either.Right(_g.failure));
			}
			break;
		case 1:
			return tink_core_Outcome.Failure(haxe_ds_Either.Left(o.failure));
		}
	});
};
var tink_core__$Pair_Pair_$Impl_$ = {};
tink_core__$Pair_Pair_$Impl_$.__name__ = true;
tink_core__$Pair_Pair_$Impl_$._new = function(a,b) {
	return new tink_core_MPair(a,b);
};
tink_core__$Pair_Pair_$Impl_$.get_a = function(this1) {
	return this1.a;
};
tink_core__$Pair_Pair_$Impl_$.get_b = function(this1) {
	return this1.b;
};
tink_core__$Pair_Pair_$Impl_$.toBool = function(this1) {
	return this1 != null;
};
tink_core__$Pair_Pair_$Impl_$.isNil = function(this1) {
	return this1 == null;
};
tink_core__$Pair_Pair_$Impl_$.nil = function() {
	return null;
};
var tink_core__$Promise_Promise_$Impl_$ = {};
tink_core__$Promise_Promise_$Impl_$.__name__ = true;
tink_core__$Promise_Promise_$Impl_$._new = function(f,lazy) {
	if(lazy == null) {
		lazy = false;
	}
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		f(function(v) {
			cb(tink_core_Outcome.Success(v));
		},function(e) {
			cb(tink_core_Outcome.Failure(e));
		});
	},lazy);
};
tink_core__$Promise_Promise_$Impl_$.eager = function(this1) {
	return this1.eager();
};
tink_core__$Promise_Promise_$Impl_$.map = function(this1,f) {
	return this1.map(f).gather();
};
tink_core__$Promise_Promise_$Impl_$.flatMap = function(this1,f) {
	return this1.flatMap(f).gather();
};
tink_core__$Promise_Promise_$Impl_$.tryRecover = function(this1,f) {
	return this1.flatMap(function(o) {
		switch(o._hx_index) {
		case 0:
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
		case 1:
			return f(o.failure);
		}
	}).gather();
};
tink_core__$Promise_Promise_$Impl_$.recover = function(this1,f) {
	return this1.flatMap(function(o) {
		switch(o._hx_index) {
		case 0:
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o.data));
		case 1:
			return f(o.failure);
		}
	}).gather();
};
tink_core__$Promise_Promise_$Impl_$.mapError = function(this1,f) {
	return this1.map(function(o) {
		switch(o._hx_index) {
		case 0:
			return o;
		case 1:
			return tink_core_Outcome.Failure(f(o.failure));
		}
	}).gather();
};
tink_core__$Promise_Promise_$Impl_$.handle = function(this1,cb) {
	return this1.handle(cb);
};
tink_core__$Promise_Promise_$Impl_$.noise = function(this1) {
	return tink_core__$Promise_Promise_$Impl_$.next(this1,function(v) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(tink_core_Noise.Noise)));
	});
};
tink_core__$Promise_Promise_$Impl_$.isSuccess = function(this1) {
	return this1.map(function(o) {
		return tink_core_OutcomeTools.isSuccess(o);
	}).gather();
};
tink_core__$Promise_Promise_$Impl_$.next = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(function(o) {
		switch(o._hx_index) {
		case 0:
			return f(o.data);
		case 1:
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(o.failure)));
		}
	});
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Promise_Promise_$Impl_$.swap = function(this1,v) {
	return tink_core__$Future_Future_$Impl_$._tryMap(this1,function(_) {
		return v;
	});
};
tink_core__$Promise_Promise_$Impl_$.swapError = function(this1,e) {
	return tink_core__$Promise_Promise_$Impl_$.mapError(this1,function(_) {
		return e;
	});
};
tink_core__$Promise_Promise_$Impl_$.merge = function(this1,other,merger,gather) {
	if(gather == null) {
		gather = true;
	}
	return tink_core__$Promise_Promise_$Impl_$.next(this1,function(t) {
		return tink_core__$Promise_Promise_$Impl_$.next(other,function(a) {
			return merger(t,a);
		},false);
	},gather);
};
tink_core__$Promise_Promise_$Impl_$.and = function(a,b) {
	return tink_core__$Promise_Promise_$Impl_$.merge(a,b,function(a1,b1) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(new tink_core_MPair(a1,b1))));
	});
};
tink_core__$Promise_Promise_$Impl_$.iterate = function(promises,$yield,fallback,lazy) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		var iter = $getIterator(promises);
		var next = null;
		next = function() {
			if(iter.hasNext()) {
				iter.next().handle(function(o) {
					switch(o._hx_index) {
					case 0:
						$yield(o.data).handle(function(o1) {
							switch(o1._hx_index) {
							case 0:
								var _g = o1.data;
								switch(_g._hx_index) {
								case 0:
									cb(tink_core_Outcome.Success(_g.v));
									break;
								case 1:
									next();
									break;
								}
								break;
							case 1:
								cb(tink_core_Outcome.Failure(o1.failure));
								break;
							}
						});
						break;
					case 1:
						cb(tink_core_Outcome.Failure(o.failure));
						break;
					}
				});
			} else {
				fallback.handle(cb);
			}
		};
		next();
	},lazy);
};
tink_core__$Promise_Promise_$Impl_$.retry = function(gen,next) {
	var stamp = function() {
		return Date.now() / 1000 * 1000;
	};
	var start = stamp();
	var attempt = null;
	attempt = function(count) {
		var f = function(error) {
			var f1 = stamp() - start;
			return tink_core__$Promise_Promise_$Impl_$.next(next({ attempt : count, error : error, elapsed : f1}),function(_) {
				return attempt(count + 1);
			});
		};
		return gen().flatMap(function(o) {
			switch(o._hx_index) {
			case 0:
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
			case 1:
				return f(o.failure);
			}
		}).gather();
	};
	return attempt(1);
};
tink_core__$Promise_Promise_$Impl_$.ofJsPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
tink_core__$Promise_Promise_$Impl_$.ofSpecific = function(s) {
	return s;
};
tink_core__$Promise_Promise_$Impl_$.ofFuture = function(f) {
	return f.map(tink_core_Outcome.Success).gather();
};
tink_core__$Promise_Promise_$Impl_$.ofOutcome = function(o) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
};
tink_core__$Promise_Promise_$Impl_$.ofError = function(e) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
};
tink_core__$Promise_Promise_$Impl_$.ofData = function(d) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(d)));
};
tink_core__$Promise_Promise_$Impl_$.lazy = function(p) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		p.get().handle(cb);
	},true);
};
tink_core__$Promise_Promise_$Impl_$.inParallel = function(a,concurrency,lazy) {
	if(a.length == 0) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success([])));
	} else {
		return tink_core__$Future_Future_$Impl_$.async(function(cb) {
			var result = [];
			var pending = a.length;
			var links = null;
			var linkArray = [];
			var sync = false;
			var i = 0;
			var iter = HxOverrides.iter(a);
			var next = null;
			var done = function(o) {
				if(links == null) {
					sync = true;
				} else if(links != null) {
					links.cancel();
				}
				cb(o);
			};
			var fail = function(e) {
				pending = 0;
				done(tink_core_Outcome.Failure(e));
			};
			var set = function(index,value) {
				result[index] = value;
				if((pending -= 1) == 0) {
					done(tink_core_Outcome.Success(result));
				} else if(iter.hasNext() && pending > 0) {
					next();
				}
			};
			next = function() {
				i += 1;
				var index1 = i - 1;
				var next1 = iter.next().handle(function(o1) {
					switch(o1._hx_index) {
					case 0:
						set(index1,o1.data);
						break;
					case 1:
						fail(o1.failure);
						break;
					}
				});
				linkArray.push(next1);
			};
			while(true) {
				var tmp;
				if(iter.hasNext() && pending > 0) {
					if(concurrency != null) {
						concurrency -= 1;
						tmp = concurrency + 1 > 0;
					} else {
						tmp = true;
					}
				} else {
					tmp = false;
				}
				if(!tmp) {
					break;
				}
				next();
			}
			links = tink_core__$Callback_CallbackLink_$Impl_$.fromMany(linkArray);
			if(sync) {
				if(links != null) {
					links.cancel();
				}
			}
		},lazy);
	}
};
tink_core__$Promise_Promise_$Impl_$.inSequence = function(a) {
	var loop = null;
	loop = function(index) {
		if(index == a.length) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success([])));
		} else {
			return tink_core__$Promise_Promise_$Impl_$.next(a[index],function(head) {
				return tink_core__$Promise_Promise_$Impl_$.next(loop(index + 1),function(tail) {
					return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success([head].concat(tail))));
				});
			});
		}
	};
	return loop(0);
};
tink_core__$Promise_Promise_$Impl_$.cache = function(gen) {
	var p = null;
	return function() {
		var ret = p;
		if(ret == null) {
			var sync = false;
			ret = tink_core__$Promise_Promise_$Impl_$.next(gen(),function(o) {
				o.b.handle(function(_) {
					sync = true;
					p = null;
				});
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(o.a)));
			});
			if(!sync) {
				p = ret;
			}
		}
		return ret.map(function(o1) {
			if(!tink_core_OutcomeTools.isSuccess(o1)) {
				p = null;
			}
			return o1;
		}).gather();
	};
};
tink_core__$Promise_Promise_$Impl_$.lift = function(p) {
	return p;
};
tink_core__$Promise_Promise_$Impl_$.trigger = function() {
	return new tink_core_FutureTrigger();
};
tink_core__$Promise_Promise_$Impl_$.resolve = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(v)));
};
tink_core__$Promise_Promise_$Impl_$.reject = function(e) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
};
var tink_core__$Promise_Next_$Impl_$ = {};
tink_core__$Promise_Next_$Impl_$.__name__ = true;
tink_core__$Promise_Next_$Impl_$.ofSafe = function(f) {
	return function(x) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x)));
	};
};
tink_core__$Promise_Next_$Impl_$.ofSync = function(f) {
	return function(x) {
		return f(x).map(tink_core_Outcome.Success).gather();
	};
};
tink_core__$Promise_Next_$Impl_$.ofSafeSync = function(f) {
	return function(x) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(f(x))));
	};
};
tink_core__$Promise_Next_$Impl_$._chain = function(a,b) {
	return function(v) {
		return tink_core__$Promise_Promise_$Impl_$.next(a(v),b);
	};
};
var tink_core__$Promise_Recover_$Impl_$ = {};
tink_core__$Promise_Recover_$Impl_$.__name__ = true;
tink_core__$Promise_Recover_$Impl_$.ofSync = function(f) {
	return function(e) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(e)));
	};
};
var tink_core__$Promise_Combiner_$Impl_$ = {};
tink_core__$Promise_Combiner_$Impl_$.__name__ = true;
tink_core__$Promise_Combiner_$Impl_$.ofSafe = function(f) {
	return function(x1,x2) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x1,x2)));
	};
};
tink_core__$Promise_Combiner_$Impl_$.ofSync = function(f) {
	return function(x1,x2) {
		return f(x1,x2).map(tink_core_Outcome.Success).gather();
	};
};
tink_core__$Promise_Combiner_$Impl_$.ofSafeSync = function(f) {
	return function(x1,x2) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(f(x1,x2))));
	};
};
var tink_core__$Promise_PromiseTrigger_$Impl_$ = {};
tink_core__$Promise_PromiseTrigger_$Impl_$.__name__ = true;
tink_core__$Promise_PromiseTrigger_$Impl_$._new = function() {
	return new tink_core_FutureTrigger();
};
tink_core__$Promise_PromiseTrigger_$Impl_$.resolve = function(this1,v) {
	return this1.trigger(tink_core_Outcome.Success(v));
};
tink_core__$Promise_PromiseTrigger_$Impl_$.reject = function(this1,e) {
	return this1.trigger(tink_core_Outcome.Failure(e));
};
tink_core__$Promise_PromiseTrigger_$Impl_$.asPromise = function(this1) {
	return this1;
};
var tink_core__$Ref_Ref_$Impl_$ = {};
tink_core__$Ref_Ref_$Impl_$.__name__ = true;
tink_core__$Ref_Ref_$Impl_$._new = function() {
	return new Array(1);
};
tink_core__$Ref_Ref_$Impl_$.get_value = function(this1) {
	return this1[0];
};
tink_core__$Ref_Ref_$Impl_$.set_value = function(this1,param) {
	return this1[0] = param;
};
tink_core__$Ref_Ref_$Impl_$.toString = function(this1) {
	return "@[" + Std.string(this1[0]) + "]";
};
tink_core__$Ref_Ref_$Impl_$.to = function(v) {
	var ret = new Array(1);
	ret[0] = v;
	return ret;
};
var tink_core__$Signal_Signal_$Impl_$ = {};
tink_core__$Signal_Signal_$Impl_$.__name__ = true;
tink_core__$Signal_Signal_$Impl_$._new = function(f) {
	return new tink_core__$Signal_SimpleSignal(f);
};
tink_core__$Signal_Signal_$Impl_$.map = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			var this2 = f(result);
			tink_core__$Callback_Callback_$Impl_$.invoke(cb,this2);
		});
	});
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.flatMap = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			f(result).handle(cb);
		});
	});
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.filter = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			if(f(result)) {
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,result);
			}
		});
	});
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.select = function(this1,selector,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			var _g = selector(result);
			switch(_g._hx_index) {
			case 0:
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,_g.v);
				break;
			case 1:
				break;
			}
		});
	});
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.join = function(this1,other,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Signal_SimpleSignal(function(cb) {
		return new tink_core__$Callback_LinkPair(this1.handle(cb),other.handle(cb));
	});
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.nextTime = function(this1,condition) {
	var ret = new tink_core_FutureTrigger();
	var link = null;
	var immediate = false;
	link = this1.handle(function(v) {
		if(condition == null || condition(v)) {
			ret.trigger(v);
			if(link == null) {
				immediate = true;
			} else if(link != null) {
				link.cancel();
			}
		}
	});
	if(immediate) {
		if(link != null) {
			link.cancel();
		}
	}
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.until = function(this1,end) {
	var ret = new tink_core__$Signal_Suspendable(function($yield) {
		var this2 = this1.handle($yield);
		if(this2 == null) {
			return tink_core__$Callback_CallbackLink_$Impl_$.noop;
		} else {
			return ($_=this2,$bind($_,$_.cancel));
		}
	});
	end.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic($bind(ret,ret.kill)));
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.next = function(this1,condition) {
	return tink_core__$Signal_Signal_$Impl_$.nextTime(this1,condition);
};
tink_core__$Signal_Signal_$Impl_$.noise = function(this1) {
	return tink_core__$Signal_Signal_$Impl_$.map(this1,function(_) {
		return tink_core_Noise.Noise;
	});
};
tink_core__$Signal_Signal_$Impl_$.gather = function(this1) {
	var ret = tink_core__$Signal_Signal_$Impl_$.trigger();
	this1.handle(function(x) {
		tink_core__$Callback_CallbackList_$Impl_$.invoke(ret.handlers,x);
	});
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.generate = function(generator) {
	var ret = tink_core__$Signal_Signal_$Impl_$.trigger();
	generator($bind(ret,ret.trigger));
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.trigger = function() {
	return new tink_core_SignalTrigger();
};
tink_core__$Signal_Signal_$Impl_$.create = function(create) {
	return new tink_core__$Signal_Suspendable(create);
};
tink_core__$Signal_Signal_$Impl_$.ofClassical = function(add,remove,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Signal_SimpleSignal(function(cb) {
		var f = function(a) {
			tink_core__$Callback_Callback_$Impl_$.invoke(cb,a);
		};
		add(f);
		var f1 = remove;
		var a1 = f;
		return new tink_core__$Callback_SimpleLink(function() {
			f1(a1);
		});
	});
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
var tink_core__$Signal_SimpleSignal = function(f) {
	this.f = f;
};
tink_core__$Signal_SimpleSignal.__name__ = true;
tink_core__$Signal_SimpleSignal.prototype = {
	handle: function(cb) {
		return this.f(cb);
	}
	,__class__: tink_core__$Signal_SimpleSignal
};
var tink_core__$Signal_Suspendable = function(activate) {
	this.killed = false;
	this.trigger = new tink_core_SignalTrigger();
	this.activate = activate;
};
tink_core__$Signal_Suspendable.__name__ = true;
tink_core__$Signal_Suspendable.prototype = {
	kill: function() {
		if(!this.killed) {
			this.killed = true;
			this.trigger = null;
		}
	}
	,handle: function(cb) {
		var _gthis = this;
		if(this.killed) {
			return null;
		}
		if(this.trigger.handlers.length == 0) {
			this.suspend = this.activate(($_=this.trigger,$bind($_,$_.trigger)));
		}
		return new tink_core__$Callback_LinkPair(tink_core__$Callback_CallbackList_$Impl_$.add(this.trigger.handlers,cb),new tink_core__$Callback_SimpleLink(function() {
			if(_gthis.trigger.handlers.length == 0) {
				_gthis.suspend();
				_gthis.suspend = null;
			}
		}));
	}
	,__class__: tink_core__$Signal_Suspendable
};
var tink_core_SignalTrigger = function() {
	this.handlers = [];
};
tink_core_SignalTrigger.__name__ = true;
tink_core_SignalTrigger.prototype = {
	trigger: function(event) {
		tink_core__$Callback_CallbackList_$Impl_$.invoke(this.handlers,event);
	}
	,getLength: function() {
		return this.handlers.length;
	}
	,handle: function(cb) {
		return tink_core__$Callback_CallbackList_$Impl_$.add(this.handlers,cb);
	}
	,clear: function() {
		tink_core__$Callback_CallbackList_$Impl_$.clear(this.handlers);
	}
	,asSignal: function() {
		return this;
	}
	,__class__: tink_core_SignalTrigger
};
var tink_domspec__$ClassName_ClassName_$Impl_$ = {};
tink_domspec__$ClassName_ClassName_$Impl_$.__name__ = true;
tink_domspec__$ClassName_ClassName_$Impl_$._new = function(s) {
	return s;
};
tink_domspec__$ClassName_ClassName_$Impl_$.add = function(this1,that) {
	var _g = that;
	return this1 == null ? _g : _g == null ? this1 : "" + this1 + " " + _g;
};
tink_domspec__$ClassName_ClassName_$Impl_$.ofMap = function(parts) {
	var _g = [];
	var c = parts.keys();
	while(c.hasNext()) {
		var c1 = c.next();
		if(__map_reserved[c1] != null ? parts.getReserved(c1) : parts.h[c1]) {
			_g.push(tink_domspec__$ClassName_ClassName_$Impl_$.ofString(c1));
		}
	}
	return tink_domspec__$ClassName_ClassName_$Impl_$.ofArray(_g);
};
tink_domspec__$ClassName_ClassName_$Impl_$.ofArray = function(parts) {
	return parts.map(tink_domspec__$ClassName_ClassName_$Impl_$.ofString).join(" ");
};
tink_domspec__$ClassName_ClassName_$Impl_$.ofString = function(s) {
	return StringTools.trim(s);
};
tink_domspec__$ClassName_ClassName_$Impl_$.ofDynamicAccess = function(parts) {
	var _g = [];
	var _g1 = 0;
	var _g2 = Reflect.fields(parts);
	while(_g1 < _g2.length) {
		var c = _g2[_g1];
		++_g1;
		if(parts[c]) {
			_g.push(tink_domspec__$ClassName_ClassName_$Impl_$.ofString(c));
		}
	}
	return tink_domspec__$ClassName_ClassName_$Impl_$.ofArray(_g);
};
var tink_domspec__$EventFrom_EventFrom_$Impl_$ = {};
tink_domspec__$EventFrom_EventFrom_$Impl_$.__name__ = true;
tink_domspec__$EventFrom_EventFrom_$Impl_$.get_currentTarget = function(this1) {
	return this1.currentTarget;
};
tink_domspec__$EventFrom_EventFrom_$Impl_$.get_target = function(this1) {
	return this1.target;
};
tink_domspec__$EventFrom_EventFrom_$Impl_$.get_src = function(this1) {
	return this1.currentTarget;
};
var tink_domspec_CSSParser = function() { };
tink_domspec_CSSParser.__name__ = true;
tink_domspec_CSSParser.parseString = function(s) {
	tink_domspec_CSSParser.style.cssText = s;
	var ret = { };
	var ret1 = ret;
	var _g = 0;
	var _g1 = tink_domspec_CSSParser.style;
	while(_g < _g1.length) {
		var name = _g1[_g];
		++_g;
		ret1[name] = tink_domspec_CSSParser.style.getPropertyValue(name);
	}
	return ret;
};
var tink_macro_Bouncer = function() { };
tink_macro_Bouncer.__name__ = true;
tink_macro_Bouncer.makeOuter = function(a) {
	return null;
};
var tink_macro_DirectType = function() { };
tink_macro_DirectType.__name__ = true;
var tink_pure__$List_FilterResult_$Impl_$ = {};
tink_pure__$List_FilterResult_$Impl_$.__name__ = true;
tink_pure__$List_FilterResult_$Impl_$.include = function(this1) {
	return this1 > 0;
};
tink_pure__$List_FilterResult_$Impl_$.stop = function(this1) {
	return (this1 & 3) == 3;
};
tink_pure__$List_FilterResult_$Impl_$.fromBool = function(b) {
	if(b) {
		return 1;
	} else {
		return 0;
	}
};
var tink_pure_NodeIterator = function(node) {
	this.list = [];
	if(node != null) {
		this.list.push(node);
	}
};
tink_pure_NodeIterator.__name__ = true;
tink_pure_NodeIterator.prototype = {
	hasNext: function() {
		return this.list.length > 0;
	}
	,next: function() {
		var _g = this.list.pop();
		if(_g == null) {
			return null;
		} else {
			var _g1 = -_g.tails.length;
			while(_g1 < 0) this.list.push(_g.tails[-(_g1++) - 1]);
			return _g.value;
		}
	}
	,__class__: tink_pure_NodeIterator
};
var tink_pure__$List_ReplaceSelector_$Impl_$ = {};
tink_pure__$List_ReplaceSelector_$Impl_$.__name__ = true;
tink_pure__$List_ReplaceSelector_$Impl_$.const = function(v) {
	return function(i) {
		return i == v;
	};
};
var tink_pure__$List_ReplaceGenerator_$Impl_$ = {};
tink_pure__$List_ReplaceGenerator_$Impl_$.__name__ = true;
tink_pure__$List_ReplaceGenerator_$Impl_$.const = function(v) {
	return function(_) {
		return v;
	};
};
var tink_state__$Measurement_Measurement_$Impl_$ = {};
tink_state__$Measurement_Measurement_$Impl_$.__name__ = true;
tink_state__$Measurement_Measurement_$Impl_$.get_value = function(this1) {
	return this1.a;
};
tink_state__$Measurement_Measurement_$Impl_$.get_becameInvalid = function(this1) {
	return this1.b;
};
tink_state__$Measurement_Measurement_$Impl_$._new = function(value,becameInvalid) {
	return new tink_core_MPair(value,becameInvalid);
};
var tink_state__$Observable_Computation_$Impl_$ = {};
tink_state__$Observable_Computation_$Impl_$.__name__ = true;
tink_state__$Observable_Computation_$Impl_$._new = function(f) {
	return { f : f};
};
tink_state__$Observable_Computation_$Impl_$.perform = function(this1) {
	return this1.f();
};
tink_state__$Observable_Computation_$Impl_$.async = function(f) {
	var o = tink_state__$Observable_Observable_$Impl_$.map(tink_state__$Observable_Observable_$Impl_$.auto({ f : f}),tink_state__$Observable_Transform_$Impl_$.plain(tink_state__$Observable_Observable_$Impl_$.ofPromise));
	return { f : function() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(tink_state__$Observable_Observable_$Impl_$.get_value(o));
	}};
};
tink_state__$Observable_Computation_$Impl_$.asyncWithLast = function(f) {
	var last = haxe_ds_Option.None;
	var o = tink_state__$Observable_Observable_$Impl_$.map(tink_state__$Observable_Observable_$Impl_$.auto({ f : function() {
		return f(last);
	}}),tink_state__$Observable_Transform_$Impl_$.plain(tink_state__$Observable_Observable_$Impl_$.ofPromise));
	return { f : function() {
		var ret = tink_state__$Observable_Observable_$Impl_$.get_value(tink_state__$Observable_Observable_$Impl_$.get_value(o));
		if(ret._hx_index == 1) {
			last = haxe_ds_Option.Some(ret.result);
		}
		return ret;
	}};
};
tink_state__$Observable_Computation_$Impl_$.plain = function(f) {
	return { f : f};
};
tink_state__$Observable_Computation_$Impl_$.withLast = function(f) {
	var last = haxe_ds_Option.None;
	return { f : function() {
		var ret = f(last);
		last = haxe_ds_Option.Some(ret);
		return ret;
	}};
};
var tink_state_Promised = $hxEnums["tink.state.Promised"] = { __ename__ : true, __constructs__ : ["Loading","Done","Failed"]
	,Loading: {_hx_index:0,__enum__:"tink.state.Promised",toString:$estr}
	,Done: ($_=function(result) { return {_hx_index:1,result:result,__enum__:"tink.state.Promised",toString:$estr}; },$_.__params__ = ["result"],$_)
	,Failed: ($_=function(error) { return {_hx_index:2,error:error,__enum__:"tink.state.Promised",toString:$estr}; },$_.__params__ = ["error"],$_)
};
var tink_state_PromisedTools = function() { };
tink_state_PromisedTools.__name__ = true;
tink_state_PromisedTools.next = function(a,f) {
	switch(a._hx_index) {
	case 0:
		return tink_core__$Promise_Promise_$Impl_$.ofSpecific(tink_core__$Promise_Promise_$Impl_$.NEVER);
	case 1:
		return f(a.result);
	case 2:
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(a.error)));
	}
};
tink_state_PromisedTools.map = function(a,f) {
	switch(a._hx_index) {
	case 0:
		return tink_state_Promised.Loading;
	case 1:
		return tink_state_Promised.Done(f(a.result));
	case 2:
		return tink_state_Promised.Failed(a.error);
	}
};
tink_state_PromisedTools.flatMap = function(a,f) {
	switch(a._hx_index) {
	case 0:
		return tink_state_Promised.Loading;
	case 1:
		return f(a.result);
	case 2:
		return tink_state_Promised.Failed(a.error);
	}
};
tink_state_PromisedTools.toOption = function(p) {
	if(p._hx_index == 1) {
		return haxe_ds_Option.Some(p.result);
	} else {
		return haxe_ds_Option.None;
	}
};
tink_state_PromisedTools.or = function(p,l) {
	if(p._hx_index == 1) {
		return p.result;
	} else {
		return l.get();
	}
};
tink_state_PromisedTools.orNull = function(p) {
	if(p._hx_index == 1) {
		return p.result;
	} else {
		return null;
	}
};
tink_state_PromisedTools.all = function(p) {
	var ret = [];
	var p1 = $getIterator(p);
	while(p1.hasNext()) {
		var p2 = p1.next();
		switch(p2._hx_index) {
		case 0:
			return tink_state_Promised.Loading;
		case 1:
			ret.push(p2.result);
			break;
		case 2:
			return tink_state_Promised.Failed(p2.error);
		}
	}
	return tink_state_Promised.Done(ret);
};
var tink_state__$State_CompoundState = function(data,set) {
	this.data = data;
	this.update = set;
};
tink_state__$State_CompoundState.__name__ = true;
tink_state__$State_CompoundState.prototype = {
	isValid: function() {
		return this.data.isValid();
	}
	,poll: function() {
		return this.data.poll();
	}
	,set: function(value) {
		this.update(value);
	}
	,__class__: tink_state__$State_CompoundState
};
var xdom_XDom = function() { };
xdom_XDom.__name__ = true;
xdom_XDom.alert = function(v) {
	window.alert(Std.string(v));
};
xdom_XDom.X = function(value) {
	return value;
};
var xdom__$Selector_Selector_$Impl_$ = {};
xdom__$Selector_Selector_$Impl_$.__name__ = true;
xdom__$Selector_Selector_$Impl_$._new = function(s) {
	return s;
};
xdom__$Selector_Selector_$Impl_$.prefixed = function(scope,selector,forceId) {
	if(scope.nodeType != 1) {
		return selector;
	}
	var prefix;
	var _g = scope.id;
	if(_g == null) {
		if(forceId || !xdom_XDom.document.documentElement.contains(scope)) {
			prefix = "#" + (scope.id = "_xdom_" + xdom__$Selector_Selector_$Impl_$.ns + "_" + xdom__$Selector_Selector_$Impl_$.counter++);
		} else if(xdom__$Selector_Selector_$Impl_$.hasScope) {
			prefix = ":scope";
		} else {
			var cur = scope;
			var path = [];
			while(true) {
				var _g1 = cur.id;
				if(_g1 == null) {
					path.push(cur.tagName);
				} else if(_g1 == "") {
					path.push(cur.tagName);
				} else {
					path.push("#" + _g1);
					break;
				}
				cur = cur.parentElement;
				if(!(cur != null)) {
					break;
				}
			}
			path.reverse();
			prefix = path.join(">");
		}
	} else if(_g == "") {
		if(forceId || !xdom_XDom.document.documentElement.contains(scope)) {
			prefix = "#" + (scope.id = "_xdom_" + xdom__$Selector_Selector_$Impl_$.ns + "_" + xdom__$Selector_Selector_$Impl_$.counter++);
		} else if(xdom__$Selector_Selector_$Impl_$.hasScope) {
			prefix = ":scope";
		} else {
			var cur1 = scope;
			var path1 = [];
			while(true) {
				var _g2 = cur1.id;
				if(_g2 == null) {
					path1.push(cur1.tagName);
				} else if(_g2 == "") {
					path1.push(cur1.tagName);
				} else {
					path1.push("#" + _g2);
					break;
				}
				cur1 = cur1.parentElement;
				if(!(cur1 != null)) {
					break;
				}
			}
			path1.reverse();
			prefix = path1.join(">");
		}
	} else {
		prefix = "#" + _g;
	}
	return "" + prefix + " " + selector;
};
var xdom__$Wrapped_Wrapped_$Impl_$ = {};
xdom__$Wrapped_Wrapped_$Impl_$.__name__ = true;
xdom__$Wrapped_Wrapped_$Impl_$.get_nodeList = function(this1) {
	return this1.nodeList || [];
};
xdom__$Wrapped_Wrapped_$Impl_$.get_children = function(this1) {
	return this1.children || [];
};
xdom__$Wrapped_Wrapped_$Impl_$.get_dataset = function(this1) {
	return this1.dataset || { };
};
xdom__$Wrapped_Wrapped_$Impl_$.qsa = function(this1,selector) {
	if(this1 != null && this1.querySelectorAll != null) {
		if(this1 == xdom_XDom.document) {
			return xdom_XDom.document.querySelectorAll(selector);
		} else {
			var e = this1;
			return (e.matches(selector) ? [e] : []).concat(xdom_html__$Collection_Collection_$Impl_$.toArray(e.querySelectorAll(xdom__$Selector_Selector_$Impl_$.prefixed(e,selector))));
		}
	} else {
		return xdom_html__$Collection_Collection_$Impl_$.empty();
	}
};
xdom__$Wrapped_Wrapped_$Impl_$.upcast = function(w) {
	return w;
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onabort = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"abort");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onblur = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"blur");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_oncanplay = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"canplay");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_oncanplaythrough = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"canplaythrough");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onchange = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"change");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onclick = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"click");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_oncompositionend = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"compositionend");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_oncompositionstart = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"compositionstart");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_oncompositionupdate = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"compositionupdate");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_oncontextmenu = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"contextmenu");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_oncopy = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"copy");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_oncut = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"cut");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_ondblclick = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"dblclick");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_ondrag = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"drag");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_ondragend = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"dragend");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_ondragenter = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"dragenter");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_ondragleave = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"dragleave");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_ondragover = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"dragover");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_ondragstart = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"dragstart");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_ondrop = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"drop");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_ondurationchange = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"durationchange");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onemptied = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"emptied");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onended = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"ended");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onerror = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"error");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onfocus = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"focus");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onfullscreenchange = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"fullscreenchange");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onfullscreenerror = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"fullscreenerror");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_ongotpointercapture = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"gotpointercapture");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_oninput = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"input");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_oninvalid = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"invalid");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onkeydown = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"keydown");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onkeypress = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"keypress");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onkeyup = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"keyup");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onload = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"load");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onloadeddata = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"loadeddata");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onloadedmetadata = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"loadedmetadata");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onloadstart = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"loadstart");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onlostpointercapture = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"lostpointercapture");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onmousedown = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"mousedown");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onmouseenter = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"mouseenter");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onmouseleave = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"mouseleave");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onmousemove = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"mousemove");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onmouseout = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"mouseout");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onmouseover = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"mouseover");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onmouseup = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"mouseup");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onpaste = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"paste");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onpause = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pause");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onplay = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"play");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onplaying = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"playing");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onpointercancel = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointercancel");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onpointerdown = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointerdown");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onpointerenter = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointerenter");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onpointerleave = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointerleave");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onpointerlockchange = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointerlockchange");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onpointerlockerror = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointerlockerror");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onpointermove = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointermove");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onpointerout = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointerout");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onpointerover = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointerover");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onpointerup = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointerup");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onprogress = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"progress");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onratechange = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"ratechange");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onreset = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"reset");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onresize = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"resize");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onscroll = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"scroll");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onseeked = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"seeked");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onseeking = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"seeking");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onselect = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"select");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onshow = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"show");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onstalled = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"stalled");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onsubmit = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"submit");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onsuspend = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"suspend");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_ontimeupdate = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"timeupdate");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_ontouchcancel = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"touchcancel");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_ontouchend = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"touchend");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_ontouchmove = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"touchmove");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_ontouchstart = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"touchstart");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onvolumechange = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"volumechange");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onwaiting = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"waiting");
};
xdom__$Wrapped_Wrapped_$Impl_$.get_onwheel = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"wheel");
};
var xdom_html__$Collection_Collection_$Impl_$ = {};
xdom_html__$Collection_Collection_$Impl_$.__name__ = true;
xdom_html__$Collection_Collection_$Impl_$.get_length = function(this1) {
	return this1.length;
};
xdom_html__$Collection_Collection_$Impl_$.get = function(this1,index) {
	return this1[index];
};
xdom_html__$Collection_Collection_$Impl_$.toArray = function(this1) {
	return Array.prototype.slice.call(this1);
};
xdom_html__$Collection_Collection_$Impl_$.empty = function() {
	return xdom_html__$Collection_Collection_$Impl_$.EMPTY;
};
xdom_html__$Collection_Collection_$Impl_$.qsa = function(this1,selector) {
	var ret = [];
	var _g = 0;
	while(_g < this1.length) ret = ret.concat(this1[_g++].qsa(selector));
	return ret;
};
var xdom_html__$Dataset_Dataset_$Impl_$ = {};
xdom_html__$Dataset_Dataset_$Impl_$.__name__ = true;
xdom_html__$Dataset_Dataset_$Impl_$.__getProperty = function(this1,name) {
	return this1[name];
};
xdom_html__$Dataset_Dataset_$Impl_$.__setProperty = function(this1,name,value) {
	return this1[name] = value;
};
xdom_html__$Dataset_Dataset_$Impl_$.keys = function(this1) {
	return Object.getOwnPropertyNames(this1);
};
xdom_html__$Dataset_Dataset_$Impl_$.toggle = function(this1,name,force) {
	this1[name] = force == null ? this1[name] != null ? "" : null : !force ? "" : null;
};
var xdom_html__$Dataset_DatasetValue_$Impl_$ = {};
xdom_html__$Dataset_DatasetValue_$Impl_$.__name__ = true;
xdom_html__$Dataset_DatasetValue_$Impl_$.toInt = function(this1) {
	return Std.parseInt(this1);
};
xdom_html__$Dataset_DatasetValue_$Impl_$.toFloat = function(this1) {
	return parseFloat(this1);
};
xdom_html__$Dataset_DatasetValue_$Impl_$.toFlag = function(this1) {
	return this1 != null;
};
xdom_html__$Dataset_DatasetValue_$Impl_$.ofFlag = function(flag) {
	if(flag) {
		return "";
	} else {
		return null;
	}
};
xdom_html__$Dataset_DatasetValue_$Impl_$.ofNumber = function(f) {
	if(isNaN(f)) {
		return null;
	} else if(f == null) {
		return "null";
	} else {
		return "" + f;
	}
};
xdom_html__$Dataset_DatasetValue_$Impl_$.not = function(v) {
	return v != null;
};
xdom_html__$Dataset_DatasetValue_$Impl_$.lOrBool = function(v,b) {
	if(v == null) {
		return b;
	} else {
		return true;
	}
};
xdom_html__$Dataset_DatasetValue_$Impl_$.rOrBool = function(b,v) {
	if(!b) {
		return v != null;
	} else {
		return true;
	}
};
xdom_html__$Dataset_DatasetValue_$Impl_$.lOr = function(v,w) {
	if(v == null) {
		return w != null;
	} else {
		return true;
	}
};
xdom_html__$Dataset_DatasetValue_$Impl_$.lAndBool = function(v,b) {
	if(v != null) {
		return b;
	} else {
		return false;
	}
};
xdom_html__$Dataset_DatasetValue_$Impl_$.rAndBool = function(b,v) {
	if(b) {
		return v != null;
	} else {
		return false;
	}
};
xdom_html__$Dataset_DatasetValue_$Impl_$.lAnd = function(v,w) {
	if(v != null) {
		return w != null;
	} else {
		return false;
	}
};
var xdom_html__$Document_Document_$Impl_$ = {};
xdom_html__$Document_Document_$Impl_$.__name__ = true;
xdom_html__$Document_Document_$Impl_$.get_body = function(this1) {
	return this1.body;
};
xdom_html__$Document_Document_$Impl_$.getElementById = function(this1,id) {
	return this1.getElementById(id);
};
xdom_html__$Document_Document_$Impl_$.toNode = function(this1) {
	return xdom__$Wrapped_Wrapped_$Impl_$.upcast(this1);
};
xdom_html__$Document_Document_$Impl_$.get_onabort = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"abort");
};
xdom_html__$Document_Document_$Impl_$.get_onblur = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"blur");
};
xdom_html__$Document_Document_$Impl_$.get_oncanplay = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"canplay");
};
xdom_html__$Document_Document_$Impl_$.get_oncanplaythrough = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"canplaythrough");
};
xdom_html__$Document_Document_$Impl_$.get_onchange = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"change");
};
xdom_html__$Document_Document_$Impl_$.get_onclick = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"click");
};
xdom_html__$Document_Document_$Impl_$.get_oncompositionend = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"compositionend");
};
xdom_html__$Document_Document_$Impl_$.get_oncompositionstart = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"compositionstart");
};
xdom_html__$Document_Document_$Impl_$.get_oncompositionupdate = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"compositionupdate");
};
xdom_html__$Document_Document_$Impl_$.get_oncontextmenu = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"contextmenu");
};
xdom_html__$Document_Document_$Impl_$.get_oncopy = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"copy");
};
xdom_html__$Document_Document_$Impl_$.get_oncut = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"cut");
};
xdom_html__$Document_Document_$Impl_$.get_ondblclick = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"dblclick");
};
xdom_html__$Document_Document_$Impl_$.get_ondrag = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"drag");
};
xdom_html__$Document_Document_$Impl_$.get_ondragend = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"dragend");
};
xdom_html__$Document_Document_$Impl_$.get_ondragenter = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"dragenter");
};
xdom_html__$Document_Document_$Impl_$.get_ondragleave = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"dragleave");
};
xdom_html__$Document_Document_$Impl_$.get_ondragover = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"dragover");
};
xdom_html__$Document_Document_$Impl_$.get_ondragstart = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"dragstart");
};
xdom_html__$Document_Document_$Impl_$.get_ondrop = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"drop");
};
xdom_html__$Document_Document_$Impl_$.get_ondurationchange = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"durationchange");
};
xdom_html__$Document_Document_$Impl_$.get_onemptied = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"emptied");
};
xdom_html__$Document_Document_$Impl_$.get_onended = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"ended");
};
xdom_html__$Document_Document_$Impl_$.get_onerror = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"error");
};
xdom_html__$Document_Document_$Impl_$.get_onfocus = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"focus");
};
xdom_html__$Document_Document_$Impl_$.get_onfullscreenchange = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"fullscreenchange");
};
xdom_html__$Document_Document_$Impl_$.get_onfullscreenerror = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"fullscreenerror");
};
xdom_html__$Document_Document_$Impl_$.get_ongotpointercapture = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"gotpointercapture");
};
xdom_html__$Document_Document_$Impl_$.get_oninput = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"input");
};
xdom_html__$Document_Document_$Impl_$.get_oninvalid = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"invalid");
};
xdom_html__$Document_Document_$Impl_$.get_onkeydown = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"keydown");
};
xdom_html__$Document_Document_$Impl_$.get_onkeypress = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"keypress");
};
xdom_html__$Document_Document_$Impl_$.get_onkeyup = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"keyup");
};
xdom_html__$Document_Document_$Impl_$.get_onload = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"load");
};
xdom_html__$Document_Document_$Impl_$.get_onloadeddata = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"loadeddata");
};
xdom_html__$Document_Document_$Impl_$.get_onloadedmetadata = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"loadedmetadata");
};
xdom_html__$Document_Document_$Impl_$.get_onloadstart = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"loadstart");
};
xdom_html__$Document_Document_$Impl_$.get_onlostpointercapture = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"lostpointercapture");
};
xdom_html__$Document_Document_$Impl_$.get_onmousedown = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"mousedown");
};
xdom_html__$Document_Document_$Impl_$.get_onmouseenter = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"mouseenter");
};
xdom_html__$Document_Document_$Impl_$.get_onmouseleave = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"mouseleave");
};
xdom_html__$Document_Document_$Impl_$.get_onmousemove = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"mousemove");
};
xdom_html__$Document_Document_$Impl_$.get_onmouseout = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"mouseout");
};
xdom_html__$Document_Document_$Impl_$.get_onmouseover = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"mouseover");
};
xdom_html__$Document_Document_$Impl_$.get_onmouseup = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"mouseup");
};
xdom_html__$Document_Document_$Impl_$.get_onpaste = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"paste");
};
xdom_html__$Document_Document_$Impl_$.get_onpause = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pause");
};
xdom_html__$Document_Document_$Impl_$.get_onplay = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"play");
};
xdom_html__$Document_Document_$Impl_$.get_onplaying = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"playing");
};
xdom_html__$Document_Document_$Impl_$.get_onpointercancel = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointercancel");
};
xdom_html__$Document_Document_$Impl_$.get_onpointerdown = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointerdown");
};
xdom_html__$Document_Document_$Impl_$.get_onpointerenter = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointerenter");
};
xdom_html__$Document_Document_$Impl_$.get_onpointerleave = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointerleave");
};
xdom_html__$Document_Document_$Impl_$.get_onpointerlockchange = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointerlockchange");
};
xdom_html__$Document_Document_$Impl_$.get_onpointerlockerror = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointerlockerror");
};
xdom_html__$Document_Document_$Impl_$.get_onpointermove = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointermove");
};
xdom_html__$Document_Document_$Impl_$.get_onpointerout = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointerout");
};
xdom_html__$Document_Document_$Impl_$.get_onpointerover = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointerover");
};
xdom_html__$Document_Document_$Impl_$.get_onpointerup = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"pointerup");
};
xdom_html__$Document_Document_$Impl_$.get_onprogress = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"progress");
};
xdom_html__$Document_Document_$Impl_$.get_onratechange = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"ratechange");
};
xdom_html__$Document_Document_$Impl_$.get_onreset = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"reset");
};
xdom_html__$Document_Document_$Impl_$.get_onresize = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"resize");
};
xdom_html__$Document_Document_$Impl_$.get_onscroll = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"scroll");
};
xdom_html__$Document_Document_$Impl_$.get_onseeked = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"seeked");
};
xdom_html__$Document_Document_$Impl_$.get_onseeking = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"seeking");
};
xdom_html__$Document_Document_$Impl_$.get_onselect = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"select");
};
xdom_html__$Document_Document_$Impl_$.get_onshow = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"show");
};
xdom_html__$Document_Document_$Impl_$.get_onstalled = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"stalled");
};
xdom_html__$Document_Document_$Impl_$.get_onsubmit = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"submit");
};
xdom_html__$Document_Document_$Impl_$.get_onsuspend = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"suspend");
};
xdom_html__$Document_Document_$Impl_$.get_ontimeupdate = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"timeupdate");
};
xdom_html__$Document_Document_$Impl_$.get_ontouchcancel = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"touchcancel");
};
xdom_html__$Document_Document_$Impl_$.get_ontouchend = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"touchend");
};
xdom_html__$Document_Document_$Impl_$.get_ontouchmove = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"touchmove");
};
xdom_html__$Document_Document_$Impl_$.get_ontouchstart = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"touchstart");
};
xdom_html__$Document_Document_$Impl_$.get_onvolumechange = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"volumechange");
};
xdom_html__$Document_Document_$Impl_$.get_onwaiting = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"waiting");
};
xdom_html__$Document_Document_$Impl_$.get_onwheel = function(this1) {
	return xdom_html__$EventSource_EventSource_$Impl_$.make(this1,"wheel");
};
var xdom_html__$EventSource_EventSource_$Impl_$ = {};
xdom_html__$EventSource_EventSource_$Impl_$.__name__ = true;
xdom_html__$EventSource_EventSource_$Impl_$._new = function(f) {
	return f;
};
xdom_html__$EventSource_EventSource_$Impl_$.once = function(this1,c) {
	var c1 = c;
	var link = null;
	link = this1(function(v) {
		tink_core__$Callback_Callback_$Impl_$.invoke(c1,v);
		if(link != null) {
			link.cancel();
		}
		c1 = null;
		link = null;
	});
	return link;
};
xdom_html__$EventSource_EventSource_$Impl_$.get_signal = function(this1) {
	var self = this1;
	if(self.__xdomSignal == null) {
		self.__xdomSignal = new tink_core__$Signal_Suspendable(function(cb) {
			var this2 = this1(cb);
			if(this2 == null) {
				return tink_core__$Callback_CallbackLink_$Impl_$.noop;
			} else {
				return ($_=this2,$bind($_,$_.cancel));
			}
		});
	}
	return self.__xdomSignal;
};
xdom_html__$EventSource_EventSource_$Impl_$.map = function(this1,f) {
	return tink_core__$Signal_Signal_$Impl_$.map(xdom_html__$EventSource_EventSource_$Impl_$.get_signal(this1),f);
};
xdom_html__$EventSource_EventSource_$Impl_$.filter = function(this1,f) {
	return tink_core__$Signal_Signal_$Impl_$.filter(xdom_html__$EventSource_EventSource_$Impl_$.get_signal(this1),f);
};
xdom_html__$EventSource_EventSource_$Impl_$.select = function(this1,f) {
	return tink_core__$Signal_Signal_$Impl_$.select(xdom_html__$EventSource_EventSource_$Impl_$.get_signal(this1),f);
};
xdom_html__$EventSource_EventSource_$Impl_$.join = function(this1,other) {
	return tink_core__$Signal_Signal_$Impl_$.join(xdom_html__$EventSource_EventSource_$Impl_$.get_signal(this1),other);
};
xdom_html__$EventSource_EventSource_$Impl_$.nextTime = function(this1,condition) {
	return tink_core__$Signal_Signal_$Impl_$.nextTime(xdom_html__$EventSource_EventSource_$Impl_$.get_signal(this1),condition);
};
xdom_html__$EventSource_EventSource_$Impl_$.delegate = function(this1,s,cb) {
	var prefixed = null;
	return this1(function(e) {
		var root = e.currentTarget;
		var cur = e.target;
		if(prefixed == null) {
			prefixed = xdom__$Selector_Selector_$Impl_$.prefixed(root,s,true);
		}
		while(cur != null) {
			if(cur.matches(prefixed)) {
				var event = { currentTarget : cur};
				Object.setPrototypeOf(event,e);
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,event);
			}
			if(cur == root) {
				break;
			}
			cur = cur.parentElement;
		}
	});
};
xdom_html__$EventSource_EventSource_$Impl_$.make = function(target,event) {
	if(target != null && target.addEventListener != null) {
		var target1 = target;
		var this1 = function(cb) {
			var handle = function(event1) {
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,event1);
			};
			target1.addEventListener(event,handle);
			var f = $bind(target1,target1.removeEventListener);
			var type = event;
			var listener = handle;
			var this2 = new tink_core__$Callback_SimpleLink(function() {
				f(type,listener);
			});
			return this2;
		};
		return this1;
	} else {
		var this3 = function(cb1) {
			return null;
		};
		return this3;
	}
};
var xdom_html__$EventSource_EventSignal_$Impl_$ = {};
xdom_html__$EventSource_EventSignal_$Impl_$.__name__ = true;
xdom_html__$EventSource_EventSignal_$Impl_$.once = function(this1,c) {
	var c1 = c;
	var link = null;
	link = this1.handle(function(v) {
		tink_core__$Callback_Callback_$Impl_$.invoke(c1,v);
		if(link != null) {
			link.cancel();
		}
		c1 = null;
		link = null;
	});
	return link;
};
xdom_html__$EventSource_EventSignal_$Impl_$.of = function(s) {
	return s;
};
function $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
if(typeof $global.$haxeUID == "undefined") $global.$haxeUID = 0;
js_Boot.__toStr = ({ }).toString;
haxe_ds_ObjectMap.count = 0;
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});

        if (typeof Element !== "undefined" && !Element.prototype.matches)
          Element.prototype.matches = Element.prototype.msMatchesSelector;
      ;
tink_state__$Observable_Observable_$Impl_$.stack = new haxe_ds_List();
tink_state__$Observable_Observable_$Impl_$.scheduled = [];
tink_state__$Observable_Observable_$Impl_$.hasRAF = typeof window != 'undefined' && 'requestAnimationFrame' in window;
tink_state__$Observable_Observable_$Impl_$.isScheduled = false;
tink_state__$Observable_Observable_$Impl_$.counter = 0;
tink_core__$Callback_Callback_$Impl_$.depth = 0;
tink_core__$Callback_Callback_$Impl_$.MAX_DEPTH = 500;
coconut_diffing_Widget.defer = tink_state__$Observable_Observable_$Impl_$.schedule;
coconut_ui_View.idCounter = 0;
tink_state_ConstObservable.NEVER = new tink_core__$Future_SimpleFuture(function(_) {
	return null;
});
Booler.__type = { create : function(__coco_data_) {
	return new Booler(__coco_data_);
}, update : function(attr,v) {
	v.__initAttributes(attr);
}};
tink_pure__$List_Node.EMPTY = [];
Combo.__type = { create : function(__coco_data_) {
	return new Combo(__coco_data_);
}, update : function(attr,v) {
	v.__initAttributes(attr);
}};
FloatRange.__type = { create : function(__coco_data_) {
	return new FloatRange(__coco_data_);
}, update : function(attr,v) {
	v.__initAttributes(attr);
}};
IntRange.__type = { create : function(__coco_data_) {
	return new IntRange(__coco_data_);
}, update : function(attr,v) {
	v.__initAttributes(attr);
}};
Label.__type = { create : function(__coco_data_) {
	return new Label(__coco_data_);
}, update : function(attr,v) {
	v.__initAttributes(attr);
}};
Sui.__type = { create : function(__coco_data_) {
	return new Sui(__coco_data_);
}, update : function(attr,v) {
}};
ValueBox.__type = { create : function(__coco_data_) {
	return new ValueBox(__coco_data_);
}, update : function(attr,v) {
	v.__initAttributes(attr);
}};
coconut_diffing_Differ.WIDGET_INST = { };
coconut_diffing_Differ.EMPTY = { };
coconut_vdom__$Html_Text.inst = new coconut_vdom__$Html_Text();
coconut_ui__$Renderer_DomBackend.PLACEHOLDER = coconut_diffing_VNodeData.VNative(coconut_vdom__$Html_Text.inst,null,null,"",null);
coconut_ui_Renderer.DIFFER = new coconut_diffing_Differ(new coconut_ui__$Renderer_DomBackend());
coconut_vdom__$Html_Elt.SVG = "http://www.w3.org/2000/svg";
coconut_vdom__$Html_Elt.namespaces = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["svg"] != null) {
		_g.setReserved("svg","http://www.w3.org/2000/svg");
	} else {
		_g.h["svg"] = "http://www.w3.org/2000/svg";
	}
	$r = _g;
	return $r;
}(this));
coconut_vdom_Html.nodeTypes = new haxe_ds_StringMap();
coconut_vdom_Html.WBR = coconut_vdom_Html.nodeType("wbr");
coconut_vdom_Html.VIDEO = coconut_vdom_Html.nodeType("video");
coconut_vdom_Html.UL = coconut_vdom_Html.nodeType("ul");
coconut_vdom_Html.TRACK = coconut_vdom_Html.nodeType("track");
coconut_vdom_Html.TR = coconut_vdom_Html.nodeType("tr");
coconut_vdom_Html.TITLE = coconut_vdom_Html.nodeType("title");
coconut_vdom_Html.THEAD = coconut_vdom_Html.nodeType("thead");
coconut_vdom_Html.TH = coconut_vdom_Html.nodeType("th");
coconut_vdom_Html.TFOOT = coconut_vdom_Html.nodeType("tfoot");
coconut_vdom_Html.TEXTAREA = coconut_vdom_Html.nodeType("textarea");
coconut_vdom_Html.TD = coconut_vdom_Html.nodeType("td");
coconut_vdom_Html.TBODY = coconut_vdom_Html.nodeType("tbody");
coconut_vdom_Html.TABLE = coconut_vdom_Html.nodeType("table");
coconut_vdom_Html.SVG = coconut_vdom_Html.nodeType("svg:svg");
coconut_vdom_Html.STYLE = coconut_vdom_Html.nodeType("style");
coconut_vdom_Html.STRONG = coconut_vdom_Html.nodeType("strong");
coconut_vdom_Html.SPAN = coconut_vdom_Html.nodeType("span");
coconut_vdom_Html.SOURCE = coconut_vdom_Html.nodeType("source");
coconut_vdom_Html.SMALL = coconut_vdom_Html.nodeType("small");
coconut_vdom_Html.SELECT = coconut_vdom_Html.nodeType("select");
coconut_vdom_Html.SECTION = coconut_vdom_Html.nodeType("section");
coconut_vdom_Html.SCRIPT = coconut_vdom_Html.nodeType("script");
coconut_vdom_Html.RECT = coconut_vdom_Html.nodeType("svg:rect");
coconut_vdom_Html.PRE = coconut_vdom_Html.nodeType("pre");
coconut_vdom_Html.POLYGON = coconut_vdom_Html.nodeType("svg:polygon");
coconut_vdom_Html.PICTURE = coconut_vdom_Html.nodeType("picture");
coconut_vdom_Html.PATH = coconut_vdom_Html.nodeType("svg:path");
coconut_vdom_Html.PARAM = coconut_vdom_Html.nodeType("param");
coconut_vdom_Html.P = coconut_vdom_Html.nodeType("p");
coconut_vdom_Html.OPTION = coconut_vdom_Html.nodeType("option");
coconut_vdom_Html.OL = coconut_vdom_Html.nodeType("ol");
coconut_vdom_Html.OBJECT = coconut_vdom_Html.nodeType("object");
coconut_vdom_Html.NAV = coconut_vdom_Html.nodeType("nav");
coconut_vdom_Html.META = coconut_vdom_Html.nodeType("meta");
coconut_vdom_Html.MENU = coconut_vdom_Html.nodeType("menu");
coconut_vdom_Html.MAIN = coconut_vdom_Html.nodeType("main");
coconut_vdom_Html.LINK = coconut_vdom_Html.nodeType("link");
coconut_vdom_Html.LI = coconut_vdom_Html.nodeType("li");
coconut_vdom_Html.LABEL = coconut_vdom_Html.nodeType("label");
coconut_vdom_Html.INS = coconut_vdom_Html.nodeType("ins");
coconut_vdom_Html.INPUT = coconut_vdom_Html.nodeType("input");
coconut_vdom_Html.IMG = coconut_vdom_Html.nodeType("img");
coconut_vdom_Html.IFRAME = coconut_vdom_Html.nodeType("iframe");
coconut_vdom_Html.I = coconut_vdom_Html.nodeType("i");
coconut_vdom_Html.HTML = coconut_vdom_Html.nodeType("html");
coconut_vdom_Html.HR = coconut_vdom_Html.nodeType("hr");
coconut_vdom_Html.HEADER = coconut_vdom_Html.nodeType("header");
coconut_vdom_Html.HEAD = coconut_vdom_Html.nodeType("head");
coconut_vdom_Html.H6 = coconut_vdom_Html.nodeType("h6");
coconut_vdom_Html.H5 = coconut_vdom_Html.nodeType("h5");
coconut_vdom_Html.H4 = coconut_vdom_Html.nodeType("h4");
coconut_vdom_Html.H3 = coconut_vdom_Html.nodeType("h3");
coconut_vdom_Html.H2 = coconut_vdom_Html.nodeType("h2");
coconut_vdom_Html.H1 = coconut_vdom_Html.nodeType("h1");
coconut_vdom_Html.FORM = coconut_vdom_Html.nodeType("form");
coconut_vdom_Html.FOOTER = coconut_vdom_Html.nodeType("footer");
coconut_vdom_Html.FIELDSET = coconut_vdom_Html.nodeType("fieldset");
coconut_vdom_Html.EMBED = coconut_vdom_Html.nodeType("embed");
coconut_vdom_Html.EM = coconut_vdom_Html.nodeType("em");
coconut_vdom_Html.ELLIPSE = coconut_vdom_Html.nodeType("svg:ellipse");
coconut_vdom_Html.DT = coconut_vdom_Html.nodeType("dt");
coconut_vdom_Html.DL = coconut_vdom_Html.nodeType("dl");
coconut_vdom_Html.DIV = coconut_vdom_Html.nodeType("div");
coconut_vdom_Html.DEL = coconut_vdom_Html.nodeType("del");
coconut_vdom_Html.DD = coconut_vdom_Html.nodeType("dd");
coconut_vdom_Html.CIRCLE = coconut_vdom_Html.nodeType("svg:circle");
coconut_vdom_Html.CANVAS = coconut_vdom_Html.nodeType("canvas");
coconut_vdom_Html.BUTTON = coconut_vdom_Html.nodeType("button");
coconut_vdom_Html.BR = coconut_vdom_Html.nodeType("br");
coconut_vdom_Html.BODY = coconut_vdom_Html.nodeType("body");
coconut_vdom_Html.B = coconut_vdom_Html.nodeType("b");
coconut_vdom_Html.AUDIO = coconut_vdom_Html.nodeType("audio");
coconut_vdom_Html.ASIDE = coconut_vdom_Html.nodeType("aside");
coconut_vdom_Html.ARTICLE = coconut_vdom_Html.nodeType("article");
coconut_vdom_Html.A = coconut_vdom_Html.nodeType("a");
coconut_vdom__$Html_HtmlFragment.__type = { create : function(__coco_data_) {
	return new coconut_vdom__$Html_HtmlFragment(__coco_data_);
}, update : function(attr,v) {
	v.__initAttributes(attr);
}};
tink_core__$Future_NeverFuture.inst = new tink_core__$Future_NeverFuture();
tink_core__$Future_Future_$Impl_$.NULL = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(null));
tink_core__$Future_Future_$Impl_$.NOISE = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Noise.Noise));
tink_core__$Future_Future_$Impl_$.NEVER = tink_core__$Future_NeverFuture.inst;
tink_core__$Promise_Promise_$Impl_$.NULL = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(null)));
tink_core__$Promise_Promise_$Impl_$.NOISE = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(tink_core_Noise.Noise)));
tink_core__$Promise_Promise_$Impl_$.NEVER = tink_core__$Future_Future_$Impl_$.NEVER.map(tink_core_Outcome.Success).gather();
tink_domspec_CSSParser.style = window.document.createElement("div").style;
tink_pure__$List_FilterResult_$Impl_$.ExcludeAndStop = -3;
tink_pure__$List_FilterResult_$Impl_$.Exclude = 0;
tink_pure__$List_FilterResult_$Impl_$.Include = 1;
tink_pure__$List_FilterResult_$Impl_$.IncludeAndStop = 3;
xdom_XDom.window = window;
xdom_XDom.document = window.document;
xdom_XDom.console = window.console;
xdom__$Selector_Selector_$Impl_$.hasScope = (function($this) {
	var $r;
	try {
		$r = true;
	} catch( e ) {
		$r = false;
	}
	return $r;
}(this));
xdom__$Selector_Selector_$Impl_$.ns = xdom_XDom.window._xdom_ns = (xdom_XDom.window._xdom_ns | 0) + 1;
xdom__$Selector_Selector_$Impl_$.counter = 0;
xdom_html__$Collection_Collection_$Impl_$.EMPTY = [];
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
